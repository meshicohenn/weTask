{"version":3,"sources":["pages/HomePage.jsx","services/httpService.js","services/userService.js","store/actions/userActions.js","services/utilService.js","services/cloudinaryService.js","pages/LoginSignup.jsx","cmps/BoardPreview.jsx","services/boardService.js","services/socketService.js","store/actions/boardActions.js","cmps/BoardBg.jsx","cmps/BoardAdd.jsx","cmps/BoardList.jsx","pages/Boards.jsx","cmps/AddContent.jsx","cmps/CardPreview.jsx","cmps/Stack.jsx","cmps/CardDescription.jsx","cmps/CardComments.jsx","cmps/DueDate.jsx","cmps/CardChangeLabel.jsx","cmps/LabelsPicker.jsx","cmps/CardMembers.jsx","cmps/CardMove.jsx","cmps/CardTimeEstimation.jsx","cmps/RemoveCard.jsx","cmps/StackMenu.jsx","cmps/CardBgColor.jsx","cmps/ActionContainer.jsx","cmps/CardChecklist.jsx","cmps/CardPreviewActions.jsx","cmps/CardImg.jsx","cmps/CardActivity.jsx","cmps/CardShowTimeEstimation.jsx","pages/CardDetails.jsx","cmps/AddMember.jsx","cmps/BoardBackground.jsx","cmps/BoardStyling.jsx","cmps/BoardActivities.jsx","cmps/RemoveBoard.jsx","cmps/BoardMenu.jsx","cmps/FilterCardsList.jsx","cmps/BoardFilter.jsx","cmps/BoardOptions.jsx","cmps/StatisticsPie.jsx","cmps/StatisticsBar.jsx","cmps/StatisticsInfoBlock.jsx","pages/BoardStatistics.jsx","services/boardDetailsUtils.js","pages/BoardDetails.jsx","pages/UserProfile.jsx","cmps/NavBar.jsx","App.js","serviceWorker.js","store/reducers/userReducer.js","store/reducers/boardReducers.js","store/store.js","history.js","index.js"],"names":["HomePage","className","to","src","alt","axios","Axios","create","withCredentials","endpoint","data","ajax","a","method","url","res","console","log","dir","response","error","login","logout","signup","getById","userId","httpService","query","filterBy","q","board","_id","update","user","userCred","_handleLogin","sessionStorage","clear","setItem","JSON","stringify","userCreds","dispatch","userService","setUser","err","type","makeId","length","id","possible","i","charAt","Math","floor","random","getRandomColor","letters","split","color","uploadImg","ev","UPLOAD_URL","formData","FormData","append","target","files","post","then","catch","LoginSignup","state","username","password","fullname","imgUrl","confirmPassword","isLogin","msg","isUploadImg","isFinishUpload","setCurrPage","props","match","path","setState","onUploadImg","timeoutFinishUpload","setTimeout","prevState","handleChange","field","name","value","handleUserSubmit","preventDefault","bgColor","history","push","onOpenUpload","inputElement","click","this","prevProps","params","clearTimeout","onSubmit","onChange","autoComplete","placeholder","ref","input","hidden","onClick","disabled","Component","mapDispatchToProps","connect","loggedInUser","BoardPreview","style","backgroundColor","bg","backgroundImage","title","save","remove","get","queryStr","prm","socket","setup","io","terminate","on","eventName","cb","off","emit","loadBoard","boardService","socketService","BoardBg","bgs","changeBgColor","map","idx","key","backgroundSize","React","BoardAdd","bgColors","bgImgs","bgBy","onHandleSubmit","members","stacks","createdAt","Date","now","createdBy","activities","boardLabels","addBoard","onClose","stopPropagation","width","required","onChangeBgBy","savedBoard","BoardList","isAddOpen","toggleAddShown","boards","Boards","loadBoards","AddContent","isOpen","addItem","event","undefined","itemTitle","currBoard","unshift","txt","byMember","onStackAdd","parentId","itemId","onCardAdd","toggleOpen","padding","fontSize","minWidth","maxWidth","borderTopLeftRadius","borderTopRightRadius","autoFocus","CardPreview","card","innerRef","provided","labelsOpen","todosStatus","todosCount","checklists","doneTodosCount","forEach","checklist","todos","todo","isDone","getTodosInfo","dueDateClass","dueDate","parse","getDueDateType","showInfo","comments","description","link","draggableProps","dragHandleProps","background","labels","onToggleLabels","label","moment","format","Stack","children","droppableProps","CardDescription","textAreaHeight","textAreaMinHeight","setDescHeight","keyCode","htmlFor","onSaveDesc","onFocus","isShown","onKeyUp","minHeight","height","isSubmitShown","CardComments","myRef","createRef","isFocusComment","current","focus","onAddComment","comment","getTwoChars","fromNow","removeComment","DueDate","date","calendarType","locale","onSubmitDate","onToggleAction","removeDueDate","CardChangeLabel","colors","isChecked","colorChecked","isColorChecked","currColor","changeLabel","labelId","onChagneLabelColor","onChangeTitle","labelSelected","onBackToLabels","autocomplete","LabelsPicker","isChangeShown","isLabelChecked","currCard","find","onEditLabel","addLabel","toUpperCase","slice","CardMembers","isMemberChecked","memberId","getCurrCard","member","getMembers","searchBy","filter","includes","str","twoChars","addMember","CardMove","selectIsShown","onToggleSelect","stack","cards","moveCardToStack","CardTimeEstimation","timeEstimation","hours","minutes","days","onAddTimeEstimation","removeCardEstimation","ReomveCard","onToggleRemoveCard","onRemoveStack","onRemoveCard","StackMenu","isOpenModalRemove","onStackRemove","stackId","CardBgColor","onChangeBgColor","ActionContainer","action","checkAction","actions","stackInfo","onOutsideClick","display","titleToReturn","move","CardChecklist","newTodo","onEditChecklistTitle","onAddTodo","addTodo","onUpdateTodo","calculateProgBarWidth","countIsDone","toFixed","calculateProgBarBgc","bgc","onRemoveChecklist","onRemoveTodo","CardPreviewActions","CardImg","onRemoveImg","CardActivity","activity","CardShowTimeEstimation","approve","onApproveTimeEstimation","onFocusComment","CardDetails","prevCardDesc","dueDateNotSave","loadCard","cardId","some","onDescShown","isPrevDesc","isDescShown","setPrevDesc","onBackBoard","boardId","onEditTitleFinish","onChangeDate","saveCard","handleCommentChange","currComment","onEditTitle","onAddLabel","currLabel","labelIdx","findIndex","splice","onAddMember","currMember","memberIdx","onAddChecklist","newChecklist","checklistId","currTodo","currChecklist","stackDest","cardIdx","isPublic","approved","onMouseDown","onBlur","getState","AddMember","loadUsers","users","BoardBackground","onSetBg","img","backgroundPosition","BoardStyling","bgChooseShown","setBgShown","BoardActivities","ReomveBoard","onToggleRemoveBoard","onRemoveBoard","BoardMenu","isStylingShown","isRemoveBoardShown","onToggleStyling","removeBoard","onToggleStatistics","toggleShowStatistics","onCloseMenu","isShowingStatistics","FilterCardsList","BoardFilter","onSetFilterBy","clearFilter","filterCards","toLowerCase","concat","BoardOptions","isAddMemberShown","isBoardMenuShown","onToggleAddMember","onToggleBoardMenu","onRemoveMember","StatisticsPie","statsTimeOut","getSliceColor","margin","top","right","bottom","left","innerRadius","padAngle","cornerRadius","borderWidth","borderColor","from","modifiers","radialLabelsSkipAngle","radialLabelsTextXOffset","radialLabelsTextColor","radialLabelsLinkOffset","radialLabelsLinkDiagonalLength","radialLabelsLinkHorizontalLength","radialLabelsLinkStrokeWidth","radialLabelsLinkColor","slicesLabelsSkipAngle","slicesLabelsTextColor","animate","motionStiffness","motionDamping","theme","fontFamily","legends","StatisticsBar","Tasks","maxTasks","keys","indexBy","axisTop","axisRight","axisBottom","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","axisLeft","tickValues","labelSkipWidth","labelSkipHeight","labelTextColor","dataFrom","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemDirection","itemOpacity","symbolSize","effects","axis","text","ticks","stroke","fill","strokeWidth","StatisticsInfoBlock","info","BoardStatistics","currView","cardCount","boardStats","getStatsByLabels","count","Object","labelTitle","labelInfo","getStatsByUsers","tasks","doneTasks","userStatsData","userInfo","getStatsByDueDates","workload","Delayed","getBoardStats","stats","byLabels","byUsers","byDueDate","totalTimeEstimation","getTotalTimeEstimation","isNoCardsBoard","estimate","elStats","reorder","list","startIndex","endIndex","result","Array","removed","BoardDetails","areLabelsOpen","stackTitles","stackMenus","populateStacksInfo","setBoard","onEditStackTitle","dataset","onNewStackTitle","getItemStyle","isDragging","draggableStyle","stackIdx","newStackTitle","newCardTitle","onDragEnd","source","destination","newState","droppableId","items","index","stackSourceTitle","stackPlace","sIndex","dIndex","sourceTitle","destTitle","cardMovedTitle","droppableSource","droppableDestination","sourceClone","destClone","onStackTitleFocus","stackTitleFocus","bgUrl","document","body","constructor","component","isCombineEnabled","snapshot","draggableId","data-idx","updateStackTitle","UserProfile","isErrorMsg","onUpdateUser","go","msgStyle","updatedUser","NavBar","isScroll","isMenuOpen","handleScroll","theDocument","documentElement","clientHeight","scrollTop","onLogout","toggleMenu","isGuest","scrollEvent","window","removeEventListener","addEventListener","isHomepage","marginTop","exact","location","pathname","App","guestSignup","Boolean","hostname","localLoggedinUser","initialState","rootReducer","combineReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","createBrowserHistory","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.5df4ea59.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function HomePage() {\r\n    return (\r\n        <>\r\n            <section className=\"home-container hero-container flex align-center\">\r\n                <div className=\"hero-cta flex space-between align-center\">\r\n                    <div className=\"hero-content\">\r\n                        <div className=\"hero-txt\">Work made easy</div>\r\n                        <p>\r\n                            Using cutting edge technologies and a great understanding of positive work principles, wework balances the best of both worlds for your team's success!\r\n                        </p>\r\n                        <Link to=\"/boards/5ecf72e3145b296860281f54\" className=\"hero-btn\">Try now</Link>\r\n                    </div>\r\n                    <img src=\"assets/img/hero-img.svg\" alt=\"\" className=\"hero-img\" />\r\n                </div>\r\n            </section>\r\n\r\n            <section className=\"home-container second-container flex align-center\">\r\n                <img src=\"assets/img/home-second-img.svg\" alt=\"\" className=\"hero-img\" />\r\n                <div className=\"content \">\r\n                    <div className=\"txt-title\">A work community like never before</div>\r\n                    <p>\r\n                        Getting a lot of great information upfront is great - but its what information you get that counts.\r\n                        With features like our 'Time Estimation' system for better development financial tracking, you can feel safe your seeing it all - and with 20/20 vision.\r\n                    </p>\r\n                </div>\r\n            </section>\r\n        </>\r\n    )\r\n}\r\n","import Axios from 'axios';\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production'\r\n    ? '/api/'\r\n    : '//localhost:3030/api/'\r\n\r\n\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n});\r\n\r\nexport default {\r\n    get(endpoint, data) {\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data) {\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data) {\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data) {\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\n\r\nasync function ajax(endpoint, method = 'get', data = null) {\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data\r\n        })\r\n        return res.data;\r\n    } catch (err) {\r\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`);\r\n        console.dir(err);\r\n        throw err.response.data.error;\r\n    }\r\n}","import httpService from './httpService'\r\n\r\nexport default {\r\n    login,\r\n    logout,\r\n    signup,\r\n    getById,\r\n    query,\r\n    update\r\n}\r\n\r\nfunction query(filterBy) {\r\n    if (!filterBy) return httpService.get('users')\r\n    return httpService.get(`users?q=${filterBy.q}&boardId=${filterBy.board._id}`)\r\n}\r\n\r\nasync function login(userCred) {\r\n    try {\r\n        const user = await httpService.post('auth/login', userCred)\r\n        return _handleLogin(user)\r\n    } catch (err) {\r\n        throw err\r\n    }\r\n}\r\n\r\nasync function signup(userCred) {\r\n    const user = await httpService.post('auth/signup', userCred)\r\n    return _handleLogin(user)\r\n}\r\n\r\nasync function logout() {\r\n    await httpService.post('auth/logout');\r\n    sessionStorage.clear();\r\n}\r\n\r\nfunction _handleLogin(user) {\r\n    sessionStorage.setItem('user', JSON.stringify(user))\r\n    return user;\r\n}\r\n\r\nfunction getById(userId) {\r\n    return httpService.get(`user/${userId}`)\r\n}\r\n\r\nfunction update(user) {\r\n    return httpService.put(`users/${user._id}`, user)\r\n}","import userService from '../../services/userService';\r\n\r\nexport function login(userCreds) {\r\n    try {\r\n        return async dispatch => {\r\n            const user = await userService.login(userCreds);\r\n            dispatch(setUser(user));\r\n        };\r\n    } catch (err) {\r\n        throw err\r\n    }\r\n}\r\n\r\nexport function update(user) {\r\n    return async dispatch => {\r\n        const updatedUser = await userService.update(user)\r\n        dispatch({ type: 'UPDATE_USER', updatedUser })\r\n    }\r\n}\r\n\r\nexport function loadUsers(filterBy = null) {\r\n    return async dispatch => {\r\n        try {\r\n            const users = await userService.query(filterBy)\r\n            dispatch({ type: 'LOAD_USERS', users })\r\n        } catch (err) {\r\n            console.log('userActions: cannot load users!', err);\r\n        }\r\n    }\r\n}\r\n\r\nexport function signup(userCreds) {\r\n    return async dispatch => {\r\n        const user = await userService.signup(userCreds);\r\n        dispatch(setUser(user));\r\n    };\r\n}\r\n\r\nexport function logout() {\r\n    return async dispatch => {\r\n        await userService.logout();\r\n        dispatch(setUser(null));\r\n    };\r\n}\r\n\r\nexport function setUser(user) {\r\n    return {\r\n        type: 'SET_USER',\r\n        user\r\n    };\r\n}","export function makeId(length = 5) {\r\n    let id = '';\r\n    let possible = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n\r\n    for (let i = 0; i < length; i++) {\r\n        id += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n\r\n    return id;\r\n}\r\n\r\nexport function getRandomColor() {\r\n    const letters = '0123456789ABCDEF'.split('');\r\n    let color = '#';\r\n    for (let i = 0; i < 6; i++) {\r\n        color += letters[Math.floor(Math.random() * 16)];\r\n    }\r\n    return color;\r\n}\r\n","import axios from 'axios'\r\n\r\nexport function uploadImg(ev) {\r\n    const CLOUD_NAME = 'shaishar9'; // find it in your cloudinary account (main page)\r\n    const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`;\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', ev.target.files[0]);\r\n    formData.append('upload_preset', 'cgwfirgu'); // second parameter is the upload preset (you can find it in cloudinary settings)\r\n\r\n    return axios.post(UPLOAD_URL, formData)\r\n        .then(res => res.data.url)\r\n        .catch(err => console.error(err))\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { login, signup } from '../store/actions/userActions';\r\nimport { getRandomColor } from '../services/utilService'\r\nimport { uploadImg } from '../services/cloudinaryService'\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass LoginSignup extends Component {\r\n\r\n    state = {\r\n        user: {\r\n            username: '',\r\n            password: '',\r\n            fullname: '',\r\n            imgUrl: '',\r\n            confirmPassword: ''\r\n        },\r\n        isLogin: false,\r\n        msg: '',\r\n        isUploadImg: false,\r\n        isFinishUpload: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        // if (!this.props.loggedInUser?.isGuest) this.props.history.push('/boards')\r\n        this.setCurrPage()\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (prevProps.match.params !== this.props.match.params) {\r\n            this.setState({\r\n                msg: '', isUploadImg: false, isFinishUpload: false,\r\n                user: { username: '', password: '', confirmPassword: '', fullname: '', imgUrl: '' }\r\n            })\r\n            this.setCurrPage()\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(this.timeoutFinishUpload)\r\n    }\r\n\r\n    setCurrPage = () => {\r\n        const isLogin = (this.props.match.path === '/login') ? true : false\r\n        this.setState({ isLogin })\r\n    }\r\n\r\n    onUploadImg = async ev => {\r\n        this.setState({ isUploadImg: true })\r\n        const imgUrl = await uploadImg(ev)\r\n        this.setState({ isUploadImg: false, isFinishUpload: true })\r\n        this.timeoutFinishUpload = setTimeout(() => {\r\n            this.setState({ isFinishUpload: false })\r\n        }, 2500);\r\n        this.setState(prevState => ({ user: { ...prevState.user, imgUrl } }))\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        const field = target.name\r\n        const value = target.value\r\n\r\n        this.setState(prevState => ({ user: { ...prevState.user, [field]: value } }))\r\n    }\r\n\r\n    handleUserSubmit = async ev => {\r\n        ev.preventDefault();\r\n        const { username, password, fullname, imgUrl, confirmPassword } = this.state.user\r\n        const { isLogin } = this.state\r\n\r\n        if (!username || !password && !confirmPassword && isLogin) return this.setState({ msg: 'Please enter username and password' })\r\n        if (!isLogin && password !== confirmPassword) return this.setState({ msg: 'Passwords don\\'t match!' })\r\n        if (!isLogin && !username && !password && !fullname) return this.setState({ msg: 'Please enter username, password and full name' });\r\n\r\n        const userCred = { username, password, fullname, imgUrl }\r\n        try {\r\n            if (this.state.isLogin) await this.props.login(userCred)\r\n            else {\r\n                userCred.bgColor = getRandomColor()\r\n                await this.props.signup(userCred)\r\n            }\r\n        } catch (err) {\r\n            return this.setState({ msg: err })\r\n        }\r\n\r\n        this.props.history.push('/boards')\r\n    }\r\n\r\n    onOpenUpload = () => {\r\n        this.inputElement.click();\r\n    }\r\n\r\n    render() {\r\n        const { isLogin, msg, user, isUploadImg, isFinishUpload } = this.state\r\n        return (\r\n            <div className=\"container flex column align-center\">\r\n                <div className=\"form-container\">\r\n                    <h2 className=\"form-title\">{isLogin ? 'Login' : 'Signup'}</h2>\r\n\r\n                    {isLogin && <div className=\"signup-login-link\"><Link to=\"/signup\">Sign up for an account</Link></div>}\r\n                    {!isLogin && <div className=\"signup-login-link\"><Link to=\"/login\">Already have an account? Sign in</Link></div>}\r\n                    {isFinishUpload && <div className=\"img-uploaded-msg flex align-center space-between\">Your image was uploaded successfully! <img src=\"assets/img/success.png\" className=\"small-icon\" alt=\"\" /></div>}\r\n                    <div className=\"form-img-container flex\">\r\n                        <form className=\"login-signup-form flex column align-start\" onSubmit={this.handleUserSubmit}>\r\n                            <input type=\"text\" onChange={this.handleChange} value={user.username} name=\"username\" autoComplete=\"off\" placeholder=\"Username\" />\r\n                            {!isLogin && <input type=\"text\" onChange={this.handleChange} value={user.fullname} name=\"fullname\" autoComplete=\"off\" placeholder=\"Full name\" />}\r\n                            <input type=\"password\" onChange={this.handleChange} value={user.password} name=\"password\" placeholder=\"Password\" />\r\n                            {!isLogin && <input type=\"password\" onChange={this.handleChange} value={user.confirmPassword} name=\"confirmPassword\" placeholder=\"Confirm password\" />}\r\n                            {!isLogin && <input type=\"file\" ref={input => this.inputElement = input} name=\"imgUrl\" onChange={this.onUploadImg} hidden />}\r\n                            <div className=\"img-submit-container flex align-start space-between\">\r\n                                {!isLogin && <span className=\"upload-img\" onClick={() => this.onOpenUpload()}>Upload Profile Image</span>}\r\n                                <button className={`btn btn-success ${isUploadImg ? 'disable' : ''}`} disabled={isUploadImg}>{isLogin ? 'Login' : 'Signup'}</button>\r\n                            </div>\r\n                        </form>\r\n                        <img src=\"assets/img/login-signup.png\" className=\"login-signup-img\" alt=\"\" />\r\n                    </div>\r\n\r\n                    {msg && <div className=\"user-msg flex align-center space-between\">{msg}<img src=\"assets/img/error-white.png\" className=\"small-icon\" alt=\"\" /></div>}\r\n\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedInUser: state.user.loggedInUser\r\n    };\r\n};\r\nconst mapDispatchToProps = {\r\n    signup,\r\n    login\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginSignup);\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function BoardPreview({ board }) {\r\n\r\n    return (\r\n        <Link to={`/boards/${board._id}`} className=\"board-item\" style={{ backgroundColor: board.bg, backgroundImage: `url(${board.bg})` }}>\r\n            <h3>{board.title}</h3>\r\n        </Link>\r\n    )\r\n}","import httpService from './httpService'\r\nconst BASE_URL = 'boards'\r\n\r\nexport default {\r\n    query,\r\n    save,\r\n    remove,\r\n    get\r\n}\r\n\r\nasync function query(userId) {\r\n    const queryStr = `?userId=${userId}`;\r\n    return await httpService.get(`${BASE_URL}${queryStr}`);\r\n}\r\n\r\nasync function get(id) {\r\n    return await httpService.get(`${BASE_URL}/${id}`)\r\n}\r\n\r\n\r\nasync function remove(id) {\r\n    return await httpService.delete(`${BASE_URL}/${id}`)\r\n}\r\n\r\nasync function save(board) {\r\n    var prm;\r\n    if (board._id) {\r\n        prm = await httpService.put(`${BASE_URL}/${board._id}`, board)\r\n    } else {\r\n        prm = await httpService.post(`${BASE_URL}`, board)\r\n    }\r\n    return prm\r\n}\r\n\r\n","import io from 'socket.io-client';\r\n\r\nconst BASE_URL =\r\n    process.env.NODE_ENV === 'production' ? '/' : '//localhost:3030';\r\n\r\nlet socket;\r\n\r\nexport default {\r\n    setup,\r\n    terminate,\r\n    on,\r\n    off,\r\n    emit\r\n};\r\n\r\nfunction setup() {\r\n    socket = io(BASE_URL);\r\n}\r\n\r\nfunction terminate() {\r\n    socket = null;\r\n}\r\n\r\nfunction on(eventName, cb) {\r\n    socket.on(eventName, cb);\r\n}\r\n\r\nfunction off(eventName, cb) {\r\n    socket.off(eventName, cb);\r\n}\r\n\r\nfunction emit(eventName, data) {\r\n    socket.emit(eventName, data);\r\n}\r\n","import boardService from '../../services/boardService'\r\nimport socketService from '../../services/socketService'\r\n\r\nexport function loadBoards(userId) {\r\n  return dispatch => {\r\n    return boardService.query(userId)\r\n      .then(boards => dispatch({ type: 'SET_BOARDS', boards }))\r\n  }\r\n}\r\n\r\nexport function updateStackTitle(id, title) {\r\n  return dispatch => dispatch({ type: 'UPDATE_STACK_TITLE', stack: { id, title } })\r\n}\r\n\r\nexport function loadBoard(id) {\r\n  return dispatch => {\r\n    boardService.get(id)\r\n      .then(board => {\r\n        dispatch({ type: 'SET_BOARD', board });\r\n      })\r\n  }\r\n}\r\nexport function saveCard(card) {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: 'SET_CARD', card });\r\n    socketService.emit('updateBoard', getState().board.currBoard);\r\n    boardService.save(getState().board.currBoard)\r\n  }\r\n}\r\nexport function removeBoard(boardId) {\r\n  return dispatch => {\r\n    return boardService.remove(boardId)\r\n      .then(() => {\r\n        dispatch({ type: 'REMOVE_BOARD', boardId })\r\n      })\r\n  }\r\n}\r\nexport function addBoard(board) {\r\n  return dispatch => {\r\n    boardService.save(board)\r\n      .then(savedBoard => dispatch({ type: 'ADD_BOARD', board: savedBoard }))\r\n  }\r\n}\r\n\r\nexport function save(board) {\r\n  return dispatch => {\r\n    dispatch({ type: 'SET_BOARD', board })\r\n    socketService.emit('updateBoard', board);\r\n    boardService.save(board)\r\n  }\r\n}\r\nexport function setBoard(board) {\r\n  return dispatch => dispatch({ type: 'SET_BOARD', board })\r\n}","import React from 'react'\r\n\r\n\r\nexport default class BoardBg extends React.Component {\r\n\r\n    render() {\r\n        const { bgs, type, changeBgColor  } = this.props\r\n        \r\n        return <ul className=\"bg-color-list clean-list flex wrap\">{\r\n            bgs.map((bg,idx )=> {\r\n                return <li key={idx} className=\"bg-color-li\" onClick={() => changeBgColor(bg)} \r\n                style={type === 'color' ? { backgroundColor: bg } : { backgroundImage: `url(${bg})`,backgroundSize:\"cover\" }}></li>\r\n            })\r\n        }\r\n      </ul >\r\n    }\r\n}\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { addBoard } from '../store/actions/boardActions'\r\nimport { Link } from 'react-router-dom'\r\nimport BoardBg from './BoardBg'\r\n\r\n\r\n\r\nclass BoardAdd extends React.Component {\r\n    state = {\r\n        board: {\r\n            title: '',\r\n            bg: '#122961'\r\n        },\r\n        bgColors: ['#fd9644', '#fc5c65', '#fed330', '#26de81', '#2bcbba', '#45aaf2', '#4b7bec', '#a55eea', '#122961'],\r\n        bgImgs: ['assets/img/bg-beach.jpg', 'assets/img/bg-flowers.jpg',\r\n            'assets/img/bg-sunset.jpg', 'assets/img/bg-view.jpg',\r\n            'assets/img/bg-view2.jpg', 'assets/img/bg-view3.jpg',\r\n            'assets/img/bg-view4.jpg', 'assets/img/bg-water.jpg', 'assets/img/bg-view5.jpg'],\r\n        bgBy: 'color'\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        let { name, value } = ev.target;\r\n        this.setState(prevState => ({ board: { ...prevState.board, [name]: value } }))\r\n    };\r\n\r\n    onHandleSubmit = (ev) => {\r\n        ev.preventDefault()\r\n        const { board } = this.state\r\n        if (!board.title) return;\r\n        board.members = [this.props.loggedInUser];\r\n        board.stacks = [];\r\n        board.createdAt = Date.now();\r\n        board.createdBy = this.props.loggedInUser;\r\n        board.activities = [];\r\n        board.boardLabels = [{ id: '101', title: 'done', color: '#61bd4f' }, { id: '102', title: 'error', color: '#f2d600' },\r\n        { id: '103', title: 'design', color: '#ff9f1a' }, { id: '104', title: 'feature', color: '#eb5a46' },\r\n        { id: '105', title: 'bug', id: '106', color: '#c377e0' }, { id: '107', title: 'warning', color: '#0079bf' }];\r\n        this.props.addBoard(board)\r\n        this.setState({ board: '' })\r\n        this.props.onClose()\r\n    };\r\n\r\n    changeBgColor = (bg) => {\r\n        this.setState(prevState => ({ board: { ...prevState.board, bg } }))\r\n    }\r\n\r\n    onChangeBgBy(bgBy) {\r\n        this.setState({ bgBy });\r\n    }\r\n\r\n    render() {\r\n        const { board, bgColors, bgImgs, bgBy } = this.state\r\n        const { onClose } = this.props\r\n        return <>\r\n            <div className=\"screen\" onClick={onClose}>\r\n                <div className=\"add-board-container modal-container\" onClick={(ev) => ev.stopPropagation()} style={{ backgroundColor: \"unset\", width: 'fit-content' }}>\r\n                    <img src=\"assets/img/close.png\" onClick={onClose} className=\"close-btn\" alt=\"\" />\r\n                    <form onSubmit={this.onHandleSubmit}>\r\n                        <div className=\"main-form-container flex wrap\">\r\n                            <div className=\"main-form\"\r\n                                style={{ width: 'unset', backgroundColor: board.bg, backgroundImage: `url(${board.bg})`, backgroundSize: \"cover\" }}>\r\n                                <div className=\"main-form-header flex space-between\">\r\n                                    <h3>Create Board</h3>\r\n                                </div>\r\n\r\n                                <input name=\"title\" className=\"board-title\" value={board.title}\r\n                                    placeholder=\"Add board title\" onChange={this.handleChange} autoComplete=\"off\" required />\r\n                                <div className=\"bg-btns-container\">\r\n                                    <Link className=\"clean-link bg-btn\" to=\"#\" onClick={() => this.onChangeBgBy('color')}>Background Color</Link>\r\n                                    <Link className=\"clean-link bg-btn\" to=\"#\" onClick={() => this.onChangeBgBy('image')}>Background Image</Link>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className=\"bg-color-container flex \">\r\n                                <BoardBg bgs={bgBy === 'color' ? bgColors : bgImgs} type={bgBy} changeBgColor={this.changeBgColor} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"modal-footer flex justify-end\">\r\n                            <button className=\"create-board-btn btn btn-success\">Create Board</button>\r\n                        </div>\r\n                    </form>\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        loggedInUser: state.user.loggedInUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    addBoard\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BoardAdd)","import React from 'react'\r\nimport BoardPreview from './BoardPreview'\r\nimport BoardAdd from './BoardAdd'\r\n\r\nexport default class BoardList extends React.Component {\r\n    \r\n    state = {\r\n        isAddOpen: false\r\n    }\r\n\r\n\r\n    toggleAddShown = () => {\r\n        this.setState(prevState => ({ isAddOpen: !prevState.isAddOpen }))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                {this.state.isAddOpen && <BoardAdd onClose={this.toggleAddShown} />}\r\n                <div className=\"boards-list\">\r\n                    {this.props.boards.map(board => <BoardPreview key={board._id} board={board} />)}\r\n                    <button className=\"add-new-board board-item\" onClick={this.toggleAddShown}>Create new board</button>\r\n                </div>\r\n            </>)\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React from 'react'\r\nimport BoardList from '../cmps/BoardList'\r\nimport { loadBoards } from '../store/actions/boardActions'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nclass Boards extends React.Component {\r\n\r\n    async componentDidMount() {\r\n        if (!this.props.loggedInUser) return this.props.history.push('/')\r\n        await this.props.loadBoards(this.props.loggedInUser._id)\r\n    }\r\n\r\n    render() {\r\n        const { loggedInUser, boards } = this.props\r\n        return ((!loggedInUser) ? 'Loading...' :\r\n            <div className=\"container flex justify-center\">\r\n                <div className=\"form-container boards-page\">\r\n                    <header className=\"boards-header wrap flex space-between\">\r\n                        <h2 className=\"boards-title\">My Boards</h2>\r\n                        <Link to=\"/profile\" className=\"hello-btn\">Hello {loggedInUser.username}</Link>\r\n                    </header>\r\n                    <BoardList boards={boards} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        boards: state.board.boards,\r\n        loggedInUser: state.user.loggedInUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadBoards\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Boards)","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { makeId } from '../services/utilService'\r\nimport { connect } from 'react-redux'\r\n\r\nclass AddContent extends React.Component {\r\n\r\n    state = {\r\n        isOpen: false,\r\n        title: ''\r\n    };\r\n\r\n    addItem = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (!event.target) return;\r\n        if (event.target.name.value === '' || event.target.name.value === undefined) return;\r\n\r\n        const itemTitle = event.target.name.value;\r\n        const { loggedInUser, type } = this.props\r\n        this.props.currBoard.activities.unshift({ id: makeId(), txt: `added new ${(type === 'stack') ? 'list' : type}: ${itemTitle}`, createdAt: Date.now(), byMember: loggedInUser })\r\n        switch (type) {\r\n            case 'stack':\r\n                this.props.onStackAdd(itemTitle);\r\n                break;\r\n            case 'card':\r\n                const parentId = this.props.itemId;\r\n                this.props.onCardAdd(itemTitle, parentId);\r\n                break;\r\n            default:\r\n                \r\n        }\r\n\r\n        this.setState({ isOpen: false, title: '' });\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n\r\n        let title = target.value;\r\n\r\n        this.setState({ title });\r\n    }\r\n\r\n    toggleOpen = (event) => {\r\n        event.preventDefault();\r\n\r\n        this.setState(({ isOpen }) => ({ isOpen: !isOpen }));\r\n    }\r\n\r\n    render() {\r\n        const { title, isOpen } = this.state;\r\n        const { type } = this.props;\r\n\r\n        return (\r\n\r\n            <div className={`add-content-container flex align-start add-${type}`} style={{\r\n\r\n                // marginRight: (type === 'stack') ? '16px' : '0',\r\n                padding: (type === 'stack') ? '10px 20px' : '10px 15px',\r\n                fontSize: (type === 'stack') ? 16 : 14,\r\n                color: (type === 'stack') ? '#ffffff' : '#888888',\r\n                // background: (type === 'stack') ? 'lightgreen' : 'cornflowerblue',\r\n                minWidth: (type === 'stack') ? 250 : '100%',\r\n                maxWidth: (type === 'stack') ? 250 : '100%',\r\n                borderTopLeftRadius: (type === 'stack') ? 3 : 0,\r\n                borderTopRightRadius: (type === 'stack') ? 3 : 0\r\n\r\n            }}>\r\n                {(isOpen)\r\n                    ?\r\n                    <>\r\n                        <form onSubmit={this.addItem} className={`add-content flex column align-start ${type === 'stack' ? '' : 'card-add-content'}`}>\r\n                            <input name=\"name\" autoComplete=\"off\" onChange={this.handleChange}\r\n                                value={title} placeholder={`Enter ${(type === 'stack') ? 'list' : type} title...`}\r\n                                className={`input ${(type === 'stack') ? 'stack-input' : 'card-input'}`} style={{ padding: '8px 12px' }} autoFocus={true} />\r\n                            <span className=\"add-content-buttons flex space-between\">\r\n                                <button className={`btn btn-${(type === 'stack') ? 'primary' : 'success'} btn-small`}>{`Add ${type}`}</button>\r\n                                <img src={`/assets/img/close${(type === 'stack') ? '-stack' : ''}.png`} onClick={this.toggleOpen} className=\"close-add-icon\" alt=\"\" />\r\n                            </span>\r\n                        </form>\r\n                    </>\r\n                    :\r\n                    <>\r\n                        <Link to=\"#\" onClick={this.toggleOpen} className=\"add-content-title\">{`Add ${(type === 'stack') ? 'list' : type}`}</Link>\r\n                    </>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currBoard: state.board.currBoard,\r\n        loggedInUser: state.user.loggedInUser\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(AddContent)\r\n","import React from 'react';\r\nimport moment from 'moment'\r\n\r\n\r\nexport function CardPreview(props) {\r\n\r\n    function onLabelsPress(ev) {\r\n        ev.stopPropagation()\r\n        props.onToggleLabels();\r\n    }\r\n\r\n    function getTodosInfo() {\r\n\r\n        let doneTodosCount = 0;\r\n\r\n        card.checklists.forEach(checklist => {\r\n            todosCount += checklist.todos.length;\r\n\r\n            checklist.todos.forEach(todo => {\r\n\r\n                if (todo.isDone) doneTodosCount += 1;\r\n            })\r\n        })\r\n\r\n        return `${doneTodosCount}/${todosCount}`;\r\n    }\r\n\r\n    function getDueDateType() {\r\n        const now = Date.now();\r\n        return (Date.parse(card.dueDate) > now) ? 'future' : 'past'\r\n    }\r\n\r\n    const { card, innerRef, provided, style, labelsOpen } = props;\r\n\r\n    let todosStatus = '';\r\n    let todosCount = 0;\r\n    if (card.checklists && card.checklists.length) {\r\n        todosStatus = getTodosInfo();\r\n    }\r\n\r\n    let dueDateClass = '';\r\n    if (card.dueDate && card.dueDate !== '') {\r\n        dueDateClass = 'due-date-' + getDueDateType();\r\n    }\r\n\r\n    const showInfo = (card.comments.length || card.description !== '' || todosCount || card.dueDate !== '');\r\n\r\n    function onCardClick() {\r\n        props.history.push(props.link)\r\n    }\r\n    // console.log(style);\r\n\r\n    return (\r\n        <>\r\n            {/* <Link to={link}> */}\r\n            <div className=\"card-preview flex column align-center justify-center\" onClick={onCardClick} ref={innerRef} style={style}\r\n                {...provided.draggableProps} {...provided.dragHandleProps} >\r\n                <div className=\"card-preview-content\" style={{ background: style.background }}>\r\n\r\n\r\n                    {(card.labels.length)\r\n                        ?\r\n                        <div className={`card-labels flex wrap align-center`} onClick={(event) => onLabelsPress(event)}>\r\n                            {\r\n                                card.labels.map(label => {\r\n                                    return (\r\n                                        <div className={`card-label flex align-center justify-center ${(labelsOpen) ? 'label-expand' : ''}`}\r\n                                            key={label.title + card.id} style={{\r\n                                                background: label.color,\r\n\r\n                                            }}>{(labelsOpen) ? label.title : ''}</div>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </div>\r\n                        : null\r\n\r\n                    }\r\n                    {card.imgUrl && <img src={card.imgUrl} className=\"card-img\" alt=\"\" />}\r\n                    <p className={`card-preview-title ${(card.labels.length) ? 'top-margin' : ''}`} >{props.title}</p>\r\n\r\n                    {(showInfo)\r\n                        ?\r\n                        <div className=\"card-preview-info flex align-center space-start\">\r\n\r\n                            {(card.dueDate && card.dueDate !== '')\r\n                                ?\r\n                                <span className={`preview-info-span flex align-center due-date ${dueDateClass}`}>\r\n                                    <img className=\"preview-info-img\" src=\"/assets/img/clock.png\" alt=\"\" />\r\n                                    <p className=\"preview-info-count\">{moment(card.dueDate).format(\"MMM DD\")}</p>\r\n                                </span>\r\n                                :\r\n                                null\r\n                            }\r\n                            {(card.description !== '')\r\n                                ?\r\n                                <span className=\"preview-info-span flex align-center\">\r\n                                    <img className=\"preview-info-img\" src=\"/assets/img/description.png\" alt=\"\" />\r\n                                </span>\r\n                                :\r\n                                null\r\n                            }\r\n                            {(card.comments.length)\r\n                                ?\r\n                                <span className=\"preview-info-span flex align-center\">\r\n                                    <img className=\"preview-info-img\" src=\"/assets/img/comment.png\" alt=\"\" />\r\n                                    <p className=\"preview-info-count\">{card.comments.length}</p>\r\n                                </span>\r\n                                :\r\n                                null\r\n                            }\r\n                            {(card.checklists && todosCount)\r\n                                ?\r\n                                <span className=\"preview-info-span flex align-center\">\r\n                                    <img className=\"preview-info-img\" src=\"/assets/img/todos.png\" alt=\"\" />\r\n                                    <p className=\"preview-info-count\">{todosStatus}</p>\r\n                                </span>\r\n                                :\r\n                                null\r\n                            }\r\n\r\n                        </div>\r\n                        : null}\r\n                </div>\r\n            </div>\r\n            {/* </Link> */}\r\n\r\n        </>\r\n    )\r\n\r\n}","import React from 'react'\r\n\r\nexport class Stack extends React.Component {\r\n\r\n    state = {\r\n\r\n    };\r\n\r\n    render() {\r\n        const { innerRef, provided, style, children } = this.props;\r\n        return (\r\n            <div className=\"stack flex column space-start\" ref={innerRef} style={style}\r\n                {...provided.droppableProps} >\r\n                {children}\r\n            </div>\r\n\r\n        )\r\n    }\r\n};","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport default class CardDescription extends Component {\r\n\r\n    state = {\r\n        textAreaHeight: 35,\r\n        textAreaMinHeight: 0\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.description.split(/\\r\\n|\\r|\\n/).length < 5) this.setState({ textAreaMinHeight: '50px' })\r\n        else this.setState({ textAreaMinHeight: '150px' })\r\n    }\r\n\r\n    setDescHeight = (ev) => {\r\n        if (ev.keyCode === 13) this.setState(prevState => ({ textAreaHeight: 20 + prevState.textAreaHeight }))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"card-desc-container\">\r\n\r\n\r\n                <div className=\"card-mini-title flex align-center\">\r\n                    <img src=\"/assets/img/description.png\" alt=\"\"></img>\r\n                    <label className=\"card-txt-title\" htmlFor=\"cardDesc\">Description</label>\r\n                </div>\r\n\r\n                <form className=\"main-content-card-action\" onSubmit={this.props.onSaveDesc}>\r\n                    <textarea name=\"description\" value={this.props.description} onChange={this.props.handleChange}\r\n                        onFocus={() => this.props.isShown(true)} className=\"card-desc\" onKeyUp={this.setDescHeight} style={{ minHeight: this.state.textAreaMinHeight, height: this.state.textAreaHeight }} id=\"cardDesc\" placeholder=\"Add your card description...\">\r\n                    </textarea>\r\n                    {this.props.isSubmitShown && <div className=\"desc-btns-container flex align-center\">\r\n                        <button className=\"btn btn-primary btn-save-desc\">Save Changes</button>\r\n                        <Link to=\"#\" className=\"cancel-changes\" onClick={() => this.props.isShown(false, true)}>\r\n                            <img className=\"close-btn-desc\" src=\"/assets/img/close.png\" alt=\"\" />\r\n                        </Link>\r\n                    </div>}\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport moment from 'moment'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport default class CardComments extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.myRef = React.createRef();\r\n    }\r\n\r\n    componentDidUpdate(prevProps){\r\n        if (this.props.isFocusComment !== prevProps.isFocusComment) {\r\n            this.myRef.current.focus();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className=\"card-mini-title flex align-center\">\r\n                    <img src=\"/assets/img/comment.png\" alt=\"\" />\r\n                    <label className=\"card-txt-title\" htmlFor=\"cardComment\">Comments</label>\r\n                </div>\r\n                <div className=\"main-content-card-action\">\r\n                    <form onSubmit={this.props.onAddComment}>\r\n                        <input ref={this.myRef} name=\"comment\" className=\"comment-input input\" autoComplete=\"off\" \r\n                        onChange={this.props.handleChange} id=\"cardComment\" placeholder=\"Your comment...\" \r\n                        value={this.props.comment} />\r\n                        <button className=\"btn-primary comment-btn\">Add Comment</button>\r\n                    </form>\r\n                    <div className=\"comments-container\">\r\n                        {this.props.comments && this.props.comments.map((comment, idx) => <div className=\"comment flex align-start column\" key={idx}>\r\n                            <div className=\"flex align-center\">\r\n                                <div className=\"member flex justify-center align-center\"\r\n                                    style={{ backgroundImage: `url(${comment.byMember.imgUrl})`, backgroundColor: comment.byMember.bgColor }}>\r\n                                    {this.props.getTwoChars(comment.byMember.fullname)}\r\n                                </div>\r\n                                <div>\r\n                                    <span className=\"comment-title-fullname\">{comment.byMember.fullname}</span>\r\n                                    <span className=\"comment-title-time\">{moment(comment.createdAt).fromNow()}</span>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"comment-txt\">{comment.txt}</div>\r\n                            <Link className=\"delete-comment\" to=\"#\" onClick={() => this.props.removeComment(comment)}>Delete</Link>\r\n                        </div>)}\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nimport Calendar from 'react-calendar';\r\nimport 'react-calendar/dist/Calendar.css';\r\n\r\nexport default function DueDate(props) {\r\n    const date = (props.value) ? new Date(props.value) : new Date()\r\n    return <div>\r\n        <Calendar onChange={props.onChange} calendarType=\"US\" value={date} locale=\"en-GB\" name=\"dueDate\" />\r\n        <div className=\"btns-container flex space-between\">\r\n            <button className=\"btn btn-primary btn-save\" onClick={() => {\r\n                props.onSubmitDate()\r\n                props.onToggleAction('dueDate')\r\n            }}>Save</button>\r\n            <button className=\"btn btn-danger btn-remove\" onClick={() => {\r\n                props.removeDueDate()\r\n                props.onToggleAction('dueDate')\r\n            }}>Remove</button>\r\n        </div>\r\n    </div>\r\n}\r\n","import React, { Component } from 'react'\r\n\r\n\r\nexport default class CardChangeLabel extends Component {\r\n    state = {\r\n        colors: [\r\n            { title: '#fd9644', isChecked: false }, { title: '#fc5c65', isChecked: false },\r\n            { title: '#fed330', isChecked: false }, { title: '#26de81', isChecked: false },\r\n            { title: '#2bcbba', isChecked: false }, { title: '#45aaf2', isChecked: false },\r\n            { title: '#4b7bec', isChecked: false }, { title: '#a55eea', isChecked: false },\r\n            { title: '#122961', isChecked: false }, { title: '#ec7dd5', isChecked: false },\r\n        ],\r\n        colorChecked: '',\r\n        title: ''\r\n    }\r\n\r\n\r\n    isColorChecked = (color) => {\r\n        this.setState(prevState => ({\r\n            colorChecked: color,\r\n            colors: prevState.colors.map(currColor => {\r\n                if (currColor.title === color) currColor.isChecked = true;\r\n                else currColor.isChecked = false;\r\n                return currColor;\r\n            })\r\n        }))\r\n    }\r\n\r\n    changeLabel = (labelId) => {\r\n        let color = this.state.colorChecked ? this.state.colorChecked : '';\r\n        let title = this.state.title ? this.state.title : '';\r\n        console.log('title', title, 'color', color);\r\n        this.props.onChagneLabelColor(labelId, color, title);\r\n    }\r\n\r\n    onChangeTitle = (ev) => {\r\n        let { value } = ev.target;\r\n        this.setState(({ title: value }))\r\n    }\r\n\r\n\r\n    render() {\r\n        const { labelSelected, onBackToLabels } = this.props\r\n        return <div className=\"change-label-container\">\r\n            <div className=\"flex align-center header-container\">\r\n                <div onClick={onBackToLabels}><img src=\"/assets/img/back.png\" alt=\"\" /></div>\r\n                <h4>EDIT LABEL</h4>\r\n            </div>\r\n            <div>\r\n                <input type=\"text\" className=\"input label-title\" autocomplete=\"off\" placeholder=\"Change title\"\r\n                    value={this.state.title} onChange={this.onChangeTitle} />\r\n            </div>\r\n            <div className=\"flex wrap align-center justify-center\">\r\n                {this.state.colors.map((color, idx) => {\r\n                    return <div key={idx} className=\"label-color-item flex align-center justify-center\"\r\n                        onClick={() => this.isColorChecked(color.title)}\r\n                        style={{ backgroundColor: color.title }} >\r\n                        {color.isChecked && <img src=\"/assets/img/icon-checked-white.png\" alt=\"\" />}\r\n                    </div>\r\n                })}\r\n            </div>\r\n            <div className=\"btns-container flex space-between\">\r\n                <button className=\"btn btn-primary btn-save\" onClick={() => {\r\n                    this.changeLabel(labelSelected);\r\n                    onBackToLabels();\r\n                }}>Save</button>\r\n            </div>\r\n        </div>\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport CardChangeLabel from './CardChangeLabel';\r\n\r\n\r\nexport default class LabelsPicker extends Component {\r\n    state = {\r\n        // labels: [{ id: '101', title: 'done', color: '#61bd4f' }, { id: '102', title: 'error', color: '#f2d600' },\r\n        // { id: '103', title: 'design', color: '#ff9f1a' }, { id: '104', title: 'feature', color: '#eb5a46' },\r\n        // { id: '105', title: 'bug', id: '106', color: '#c377e0' }, { id: '107', title: 'warning', color: '#0079bf' }],\r\n        isChangeShown: false,\r\n        labelSelected: ''\r\n    }\r\n\r\n    isLabelChecked = (labelId) => {\r\n        const currCard = this.props.card;\r\n        if (!currCard.labels) currCard.labels = [];\r\n        if (currCard.labels.find(label => labelId === label.id)) return true\r\n        return false\r\n    }\r\n\r\n    onEditLabel = (labelId) => {\r\n        this.setState(prevState => ({ isChangeShown: !prevState.isChangeShown, labelSelected: labelId }));\r\n    }\r\n\r\n    onBackToLabels = () =>{\r\n        this.setState(prevState => ({ isChangeShown: !prevState.isChangeShown }));\r\n    }\r\n\r\n    render() {\r\n        const { addLabel, onChagneLabelColor, board } = this.props\r\n        const { labelSelected, isChangeShown } = this.state\r\n        return <>\r\n            {!isChangeShown && board.boardLabels.map((label, idx) => {\r\n                return <div key={idx} className=\"flex align-center space-between\">\r\n                    <div className=\"label-item flex align-center space-between\"\r\n                        style={{ backgroundColor: label.color }} onClick={() => addLabel(label)}>\r\n                        {label.title.charAt(0).toUpperCase() + label.title.slice(1)}\r\n                        {this.isLabelChecked(label.id) ? <img src=\"/assets/img/icon-checked-white.png\" alt=\"\" /> : ''}\r\n                    </div>\r\n                    <div className=\"edit-icon\" onClick={() => this.onEditLabel(label.id)}>\r\n                        <img src=\"/assets/img/edit.svg\" />\r\n                    </div>\r\n                </div>\r\n            })}\r\n            {isChangeShown && labelSelected && <CardChangeLabel labelSelected={labelSelected} onChagneLabelColor={onChagneLabelColor} onBackToLabels={this.onBackToLabels}/>}\r\n        </>\r\n    }\r\n}","import React from 'react'\r\n\r\nexport default class CardMembers extends React.Component {\r\n    state = {\r\n        byMember: ''\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        let { value } = ev.target;\r\n        this.setState(({ byMember: value }))\r\n    };\r\n\r\n    isMemberChecked = (memberId) => {\r\n        const currCard = this.props.getCurrCard();\r\n\r\n        if (currCard.members.find(member => memberId === member._id)) return true\r\n        return false\r\n    }\r\n\r\n    getMembers = () => {\r\n        let searchBy = this.state.byMember;\r\n        if (searchBy) return this.props.board.members.filter(member => member.username.includes(searchBy))\r\n\r\n        return this.props.board.members;\r\n    }\r\n\r\n    getTwoChars(str) {\r\n        let twoChars;\r\n        if (str.split(' ').length !== 2) twoChars = str?.charAt(0)\r\n        else twoChars = str?.charAt(0) + str.split(' ')[1].charAt(0)\r\n        if (!twoChars) twoChars = ''\r\n        return twoChars\r\n    }\r\n\r\n    render() {\r\n        const { addMember } = this.props\r\n        const { getMembers } = this\r\n        return (\r\n            <div className=\"card-members-container\">\r\n                <div className=\"search-input\">\r\n                    <input type=\"text\" className=\"input search-members\" value={this.state.byMember} autoComplete=\"off\"\r\n                        placeholder=\"Search member\" onChange={this.handleChange} />\r\n                </div>\r\n                <div className=\"members-list-container\">\r\n                    <h4>BOARD MEMBERS</h4>\r\n                    <div className=\"members-list\">\r\n                        {getMembers().map(member => {\r\n                            return <div key={member._id}\r\n                                className=\"member-item flex space-between align-center\" onClick={() => addMember(member)}>\r\n                                <div className=\"flex align-center\">\r\n                                    <div className=\"member flex justify-center align-center\" style={{\r\n                                        backgroundImage: `url(${member.imgUrl})`,\r\n                                        backgroundColor: member.bgColor\r\n                                    }}>\r\n                                        {this.getTwoChars(member.fullname)}\r\n                                    </div>\r\n                                    <span className=\"members-card-title\">{member.username}</span>\r\n                                </div>\r\n                                {this.isMemberChecked(member._id) ? <img src=\"/assets/img/icon-checked.png\" /> : ''}\r\n                            </div>\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport default class CardMove extends React.Component {\r\n\r\n    state = {\r\n        selectIsShown: false\r\n    }\r\n\r\n    onToggleSelect = () => {\r\n        this.setState(prevState => ({ selectIsShown: !prevState.selectIsShown }))\r\n    }\r\n\r\n    render() {\r\n        const { card, board } = this.props\r\n        const { selectIsShown } = this.state\r\n        return (\r\n            <div className=\"card-move-container\">\r\n                <h4>SELECT DESTINATION</h4>\r\n                <div className=\"select-stack\" onClick={this.onToggleSelect}>Select list</div>\r\n                {selectIsShown && <div className=\"selection-container\">\r\n                    {board.stacks.map((stack, idx) => {\r\n                        if(stack.cards.find(currCard => currCard.id === card.id)) return null;\r\n                        return <div key={idx} className=\"option-stack-name\" onClick={() => this.props.moveCardToStack(stack)}>{stack.title}</div>\r\n                    })}\r\n                </div>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport default class CardTimeEstimation extends React.Component {\r\n\r\n    state = {\r\n        timeEstimation: {\r\n            hours: '',\r\n            minutes: '',\r\n            days:''\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        const { timeEstimation } = this.props.card\r\n        if(timeEstimation) this.setState({ timeEstimation })\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        let { name, value } = ev.target;\r\n        this.setState(prevState => ({ timeEstimation: { ...prevState.timeEstimation, [name]: value } }))\r\n    }\r\n\r\n    render() {\r\n        const { card, onAddTimeEstimation, removeCardEstimation, onToggleAction } = this.props\r\n        console.log('card', card);\r\n\r\n        return (\r\n            <div className=\"card-time-estimation-container\">\r\n                <h4>SELECT TIME ESTIMATION</h4>\r\n                <div>Days:<input type=\"number\" name=\"days\" className=\"input input-time-estimation\"\r\n                    onChange={this.handleChange} autoComplete=\"off\" value={this.state.timeEstimation.days}\r\n                    placeholder={`${card.timeEstimation ? card.timeEstimation.days : '00'}`} />\r\n                </div>\r\n                <div>Hours:<input type=\"number\" name=\"hours\" className=\"input input-time-estimation\"\r\n                    onChange={this.handleChange} autoComplete=\"off\" value={this.state.timeEstimation.hours}\r\n                    placeholder={`${card.timeEstimation ? card.timeEstimation.hours : '00'}`} />\r\n                </div>\r\n                <div>Minutes:<input type=\"number\" name=\"minutes\" className=\"input input-time-estimation\"\r\n                    onChange={this.handleChange} autoComplete=\"off\" value={this.state.timeEstimation.minutes}\r\n                    placeholder={`${card.timeEstimation ? card.timeEstimation.minutes : '00'}`} />\r\n                </div>\r\n                <div className=\"btns-container flex space-between\">\r\n                    <button className=\"btn btn-primary btn-save\" onClick={() => {\r\n                        onAddTimeEstimation(this.state.timeEstimation);\r\n                        onToggleAction('timeEstimation');\r\n                    }}>Save</button>\r\n                    <button className=\"btn btn-danger btn-remove\" onClick={() => {\r\n                        removeCardEstimation()\r\n                        onToggleAction('timeEstimation');\r\n                    }}>Remove</button>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport default function ReomveCard(props) {\r\n    const { type } = props;\r\n    return (\r\n        <div className=\"remove-board-container remove-card\">\r\n            <div className=\"remove-board-title remove-card-title flex align-center space-between\">\r\n                {`Remove ${(type && type === 'stack') ? 'list' : 'card'}`}\r\n                <img src=\"/assets/img/close.png\" className=\"close-icon\" onClick={() => props.onToggleRemoveCard()} alt=\"\" />\r\n            </div>\r\n            <p>Are you sure?</p>\r\n            {(type && type === 'stack') ?\r\n                <button className=\"btn btn-danger btn-remove-card\" onClick={() => props.onRemoveStack()}>Yes, remove!</button>\r\n                :\r\n                <button className=\"btn btn-danger btn-remove-card\" onClick={() => props.onRemoveCard()}>Yes, remove!</button>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport ReomveCard from '../cmps/RemoveCard'\r\n\r\nexport default class StackMenu extends React.Component {\r\n\r\n    state = {\r\n        isOpenModalRemove: false\r\n    };\r\n\r\n    onToggleRemoveCard = () => {\r\n        this.setState(prevState => ({ isOpenModalRemove: !prevState.isOpenModalRemove }))\r\n    }\r\n\r\n    onRemoveStack = () => {\r\n        this.props.onStackRemove(this.props.stackId)\r\n    }\r\n\r\n    render() {\r\n\r\n        const { isOpenModalRemove } = this.state;\r\n\r\n        return (\r\n            <>\r\n            <ul className=\"stack-menu-list\">\r\n                <li className=\"stack-menu-item\"><div className=\"stack-menu-move\">Move List</div></li>\r\n                <li className=\"stack-menu-item\" onClick={this.onToggleRemoveCard}><div className=\"stack-menu-remove\" >Remove List</div></li>\r\n            </ul>\r\n            {isOpenModalRemove && <ReomveCard type=\"stack\" onToggleRemoveCard={this.onToggleRemoveCard} onRemoveStack={this.onRemoveStack} />}\r\n            </>\r\n        )\r\n    }\r\n};","import React from 'react'\r\n\r\nexport default function CardBgColor(props) {\r\n    const bgColors = ['#fd9644', '#fc5c65', '#fed330', '#26de81', '#2bcbba', '#45aaf2', '#4b7bec', '#a55eea', '#122961', '#fff', '#000','#f8a5c2']\r\n    return (\r\n        <div className=\"card-bg-container flex wrap justify-center\">\r\n            {bgColors.map((color, idx) => <div key={idx} className=\"card-bg\" onClick={() => props.onChangeBgColor(color)} style={{ backgroundColor: color }}></div>)}\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport DueDate from './DueDate'\r\nimport LabelsPicker from './LabelsPicker'\r\nimport CardMembers from './CardMembers'\r\nimport CardMove from './CardMove'\r\nimport CardTimeEstimation from './CardTimeEstimation'\r\nimport StackMenu from './StackMenu'\r\nimport CardBgColor from './CardBgColor'\r\nimport OutsideClickHandler from 'react-outside-click-handler';\r\nimport CardChangeLabel from './CardChangeLabel'\r\n\r\n\r\n\r\nexport default class ActionContainer extends Component {\r\n    state = {\r\n        action: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.checkAction();\r\n    }\r\n\r\n    checkAction() {\r\n        const actions = this.props.isShown;\r\n        for (const key in actions) {\r\n            if (actions[key]) {\r\n                this.setState({ action: key });\r\n            }\r\n        }\r\n    }\r\n\r\n    titleToReturn(key) {\r\n        switch (key) {\r\n            case 'dueDate':\r\n                return 'Change Due Date'\r\n            case 'label':\r\n                return 'Labels'\r\n            case 'members':\r\n                return 'Add Members'\r\n            case 'move':\r\n                return 'Move Card'\r\n            case 'timeEstimation':\r\n                return 'Time Estimation'\r\n            case 'stack':\r\n                return this.props.stackInfo.title\r\n            case 'bgColor':\r\n                return 'Change Background Color'\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { isShown, card, onToggleAction, board, onChange, value, onSubmitDate,\r\n            getCurrCard, addLabel, addMember, removeDueDate, moveCardToStack,\r\n            onAddTimeEstimation, removeCardEstimation, stackInfo, onStackRemove,\r\n            onChangeBgColor, onChagneLabelColor } = this.props;\r\n\r\n\r\n        const { action, labelId } = this.state;\r\n\r\n        return (\r\n            <OutsideClickHandler onOutsideClick={() => onToggleAction(action)} display={'contents'}>\r\n                < div className=\"action-container\" >\r\n                    <div className=\"action-header flex space-between align-center\">\r\n                        <h3>{this.titleToReturn(action)}</h3>\r\n                        <button className=\"close-label\" onClick={() => onToggleAction(action)}>\r\n                            <img src=\"/assets/img/close.png\" alt=\"\" />\r\n                        </button>\r\n                    </div>\r\n                    {isShown.label && <LabelsPicker board={this.props.board} onChagneLabelColor={onChagneLabelColor} addLabel={addLabel} card={card} onToggleAction={onToggleAction} />}\r\n                    {isShown.dueDate && <DueDate onChange={onChange} value={value} onToggleAction={onToggleAction} removeDueDate={removeDueDate} onSubmitDate={onSubmitDate} />}\r\n                    {isShown.members && <CardMembers board={board} getCurrCard={getCurrCard} card={card} addMember={addMember} />}\r\n                    {isShown.bgColor && <CardBgColor board={board} onToggleAction={onToggleAction} getCurrCard={getCurrCard} card={card} onChangeBgColor={onChangeBgColor} />}\r\n                    {isShown.move && <CardMove board={board} card={card} moveCardToStack={moveCardToStack} />}\r\n                    {isShown.timeEstimation && <CardTimeEstimation card={card} onToggleAction={onToggleAction}\r\n                        onAddTimeEstimation={onAddTimeEstimation} removeCardEstimation={removeCardEstimation} />}\r\n                    {isShown.stack && <StackMenu board={board} stackId={stackInfo.id} onStackRemove={onStackRemove} />}\r\n                </div >\r\n            </OutsideClickHandler>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\r\n\r\nexport default class CardChecklist extends React.Component {\r\n    state = {\r\n        newTodo: {\r\n            title: '',\r\n            isDone: false\r\n        }\r\n    }\r\n\r\n    onEditChecklistTitle = (ev) => {\r\n        let { value } = ev.target;\r\n        this.props.onEditChecklistTitle(this.props.checklist.id, value)\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        let { name, value } = ev.target;\r\n        this.setState(prevState => ({ newTodo: { ...prevState.newTodo, [name]: value } }))\r\n    }\r\n\r\n    onAddTodo = (ev) => {\r\n        ev.preventDefault();\r\n        this.props.addTodo(this.props.checklist.id, this.state.newTodo)\r\n        this.setState({ newTodo: { title: '', isDone: false } })\r\n    }\r\n\r\n    onUpdateTodo = (ev, todo, click = false) => {\r\n        let { name, value } = ev.target;\r\n        if (click) todo.isDone = !todo.isDone;\r\n\r\n        const newTodo = { ...todo, [name]: value }\r\n        this.props.addTodo(this.props.checklist.id, newTodo)\r\n    }\r\n\r\n    calculateProgBarWidth = () => {\r\n        let countIsDone = 0;\r\n        this.props.checklist.todos.forEach(todo => {\r\n            if (todo.isDone) countIsDone++;\r\n        })\r\n        if (!this.props.checklist.todos.length) return 0;\r\n        return ((countIsDone / this.props.checklist.todos.length) * 100).toFixed(0);\r\n    }\r\n\r\n    calculateProgBarBgc = () => {\r\n        const width = this.calculateProgBarWidth();\r\n        if (width === '100') return '#61bd4f'\r\n        return '#0079bf'\r\n    }\r\n\r\n    render() {\r\n        const { title, todos, id, } = this.props.checklist\r\n        const width = this.calculateProgBarWidth();\r\n        const bgc = this.calculateProgBarBgc();\r\n        return (\r\n            <div className=\"card-checklist-container\">\r\n                <div className=\"card-checklist-title flex align-center space-between\">\r\n                    <div>\r\n                        <img src=\"/assets/img/todos.png\" />\r\n                        <input type=\"text\" name=\"title\" className=\"checklist-title\" autoComplete=\"off\" onChange={this.onEditChecklistTitle} value={title} />\r\n                    </div>\r\n                    <button className=\"btn btn-delete\" onClick={() => this.props.onRemoveChecklist(this.props.checklist)}>Delete</button>\r\n                </div>\r\n                <div className=\"checklist-main\">\r\n                    <div className=\"checklist-progress-bar-container\"><span>{`${width}%`}</span>\r\n                        <div className=\"checklist-progress-bar\">\r\n                            <div className=\"progress-bar\" style={{ width: `${width}%`, backgroundColor: `${bgc}` }}>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"checklist-todos-container\">\r\n                        {todos.map((todo) => <div className=\"flex align-center todo-item space-between\" key={todo.id}>\r\n                            <div className=\"todo-check-container flex align-center\">\r\n                                <div className={todo.isDone ? \"checkbox done\" : \"checkbox\"} onClick={(event) => this.onUpdateTodo(event, todo, true)}>\r\n                                </div>\r\n                                <input name=\"title\" className={`checklist-title todo-title ${todo.isDone ? 'done-decoration' : 'd'}`}\r\n                                    value={todo.title} onChange={(event) => this.onUpdateTodo(event, todo)} />\r\n                            </div>\r\n                            <div className=\"todo-delete-btn-container\"><img className=\"todo-delete-btn\" src=\"/assets/img/close.png\" onClick={() => this.props.onRemoveTodo(id, todo)} /></div>\r\n                        </div>\r\n                        )}\r\n                        <form onSubmit={this.onAddTodo}>\r\n                            <input type=\"text\" name=\"title\" className=\"checklist-title todo-title add-todo\" onChange={this.handleChange} placeholder=\"Add New Todo\" autoComplete=\"off\" value={this.state.newTodo.title} />\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div >\r\n        )\r\n    }\r\n}","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nexport default function CardPreviewActions(props) {\r\n    const { card, getTwoChars } = props\r\n    return (\r\n        <>\r\n            {(card.members.length !== 0 || card.labels.length !== 0 || card.dueDate) && <div className=\"members-labels-container flex wrap\">\r\n                {card.members.length !== 0 &&\r\n                    <div className=\"member-card-container\" >\r\n                        <h3>Members</h3>\r\n                        <div className=\"flex wrap\">\r\n                            {card.members.map((member, idx) => <div key={idx} className=\"member flex justify-center align-center\"\r\n                                style={{ backgroundImage: `url(${member.imgUrl})`, backgroundColor: member.bgColor }}>\r\n                                {getTwoChars(member.fullname)}\r\n                            </div>)}\r\n                        </div>\r\n\r\n                    </div>}\r\n                {card.labels.length !== 0 &&\r\n                    <div className=\"labels-card-container\">\r\n                        <h3>Labels</h3>\r\n                        <div className=\"flex wrap\">\r\n                            {card.labels.map((label,idx) => <div key={idx} className=\"card-label-item\" style={{ backgroundColor: `${label.color}` }}>\r\n                                {label.title}\r\n                            </div>)}\r\n                        </div>\r\n\r\n                    </div>}\r\n                {card.dueDate &&\r\n                    <div className=\"due-date-container\">\r\n                        <h3>Due date</h3>\r\n                        <div className=\"flex align-center justify-center time-container\">\r\n                            {moment(card.dueDate).format(\"MMM DD\")}\r\n                        </div>\r\n                    </div>\r\n                }\r\n            </div>}\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function CardImg(props) {\r\n    return (\r\n        <div className=\"card-img-container\">\r\n            <div className=\"card-mini-title flex align-center space-between\">\r\n                <div>\r\n                    <img src=\"/assets/img/style.png\"></img>\r\n                    <label className=\"card-txt-title\">Image</label>\r\n                </div>\r\n                <button className=\"btn btn-delete\" onClick={() => props.onRemoveImg()}>Delete</button>\r\n            </div>\r\n            <div className=\"card-img\">\r\n                {props.isUploadImg? <div className=\"loading\">\r\n                    <div className=\"dot\"></div>\r\n                    <div className=\"dot\"></div>\r\n                    <div className=\"dot\"></div>\r\n                    <div className=\"dot\"></div>\r\n                    <div className=\"dot\"></div>\r\n                </div> : <img src={`${props.card.imgUrl}`} />}\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nexport default function CardActivity(props) {\r\n    const { activities } = props;\r\n    return (\r\n        <>\r\n            <div className=\"card-mini-title flex align-center\">\r\n                <img src=\"/assets/img/activity.png\" />\r\n                <span className=\"card-txt-title\" htmlFor=\"cardComment\">Activity</span>\r\n            </div>\r\n            <div className=\"main-content-card-action\">\r\n                <div className=\"comments-container\">\r\n                    {activities && activities.map((activity, idx) => <div className=\"comment flex align-start column\" key={idx}>\r\n                        <div className=\"flex align-center\">\r\n                            <div className=\"member flex justify-center align-center\"\r\n                                style={{ backgroundImage: `url(${activity.byMember.imgUrl})`, backgroundColor: activity.byMember.bgColor }}>\r\n                                {props.getTwoChars(activity.byMember.fullname)}\r\n                            </div>\r\n                            <div className=\"flex align-center\">\r\n                                <span className=\"comment-title-fullname\">{activity.byMember.fullname}</span>\r\n                                <div className=\"activity-txt\">{activity.txt}</div>\r\n                            </div>\r\n                        </div>\r\n                        <span className=\"comment-title-time activity-time\">{moment(activity.createdAt).fromNow()}</span>\r\n\r\n                    </div>)}\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default class CardShowTimeEstimation extends React.Component {\r\n\r\n\r\n\r\n    render() {\r\n        const { timeEstimation } = this.props.card\r\n        return (\r\n            <>\r\n                {(timeEstimation.days || timeEstimation.hours || timeEstimation.minutes) && <>\r\n                    <h3 className=\"time-estimation-title\">Time Estimation</h3>\r\n                    <div className=\"show-time-estimation flex align-center space-between\">\r\n                        <div>\r\n                            {timeEstimation.days ? <span>{timeEstimation.days} days </span> : ''}\r\n                            {timeEstimation.hours ? <span> {timeEstimation.hours} hours </span> : ''}\r\n                            {timeEstimation.minutes ? <span> {timeEstimation.minutes} minutes</span> : ''}\r\n                        </div>\r\n                        {!timeEstimation.approve && <div className=\"flex align-center justify-center\" >\r\n                            <span onClick={this.props.onApproveTimeEstimation}><img src=\"/assets/img/approve.png\" title=\"Approve\" alt=\"\" /></span>\r\n                            <span onClick={this.props.onFocusComment}><img src=\"/assets/img/small-comment.png\" title=\"Comment\" alt=\"\" /></span>\r\n                        </div>\r\n                        }\r\n                    </div>\r\n                </>}\r\n            </>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport CardDescription from '../cmps/CardDescription'\r\nimport CardComments from '../cmps/CardComments'\r\nimport { save, loadBoard, saveCard } from '../store/actions/boardActions'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { makeId } from '../services/utilService'\r\nimport ActionContainer from '../cmps/ActionContainer'\r\nimport CardChecklist from '../cmps/CardChecklist'\r\nimport CardPreviewActions from '../cmps/CardPreviewActions'\r\nimport { uploadImg } from '../services/cloudinaryService'\r\nimport CardImg from '../cmps/CardImg'\r\nimport RemoveCard from '../cmps/RemoveCard'\r\nimport moment from 'moment'\r\nimport CardActivity from '../cmps/CardActivity'\r\nimport CardShowTimeEstimation from '../cmps/CardShowTimeEstimation'\r\n\r\nclass CardDetails extends Component {\r\n\r\n    state = {\r\n        card: null,\r\n        prevCardDesc: '',\r\n        isShown: {\r\n            label: false,\r\n            dueDate: false,\r\n            members: false,\r\n            move: false,\r\n            timeEstimation: false,\r\n            bgColor: false\r\n        },\r\n        comment: {\r\n            txt: ''\r\n        },\r\n        isUploadImg: false,\r\n        isFinishUpload: false,\r\n        isOpenModalRemove: false,\r\n        dueDateNotSave: '',\r\n        isFocusComment: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.currBoard) this.loadCard()\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.currBoard !== prevProps.currBoard) {\r\n            this.loadCard()\r\n        }\r\n    }\r\n\r\n    loadCard = () => {\r\n        const currCard = this.getCurrCard();\r\n        this.setState({ card: currCard }, () => this.setState({ prevCardDesc: this.state.card.description }))\r\n    }\r\n\r\n    getCurrCard = () => {\r\n        const cardId = this.props.match.params.cardId\r\n        let card;\r\n        this.props.currBoard.stacks.some(stack => {\r\n            card = stack.cards.find(card => card.id === cardId)\r\n            return card\r\n        })\r\n        if (!card) return this.props.history.push('/boards')\r\n        return card\r\n    }\r\n\r\n    onDescShown = (isShown, isPrevDesc) => {\r\n        this.setState({ isDescShown: isShown })\r\n        if (!isShown && isPrevDesc) this.setPrevDesc()\r\n    }\r\n\r\n    setPrevDesc = () => {\r\n        this.setState(prevState => ({ card: { ...prevState.card, description: this.state.prevCardDesc } }))\r\n    }\r\n\r\n    onBackBoard = () => {\r\n        const { boardId } = this.props.match.params\r\n        this.onEditTitleFinish()\r\n        this.props.history.push(`/boards/${boardId}`)\r\n    }\r\n\r\n    // @TODO: due date start from the DB, if got\r\n\r\n    onChangeDate = (dueDate) => {\r\n        this.setState({ dueDateNotSave: dueDate })\r\n    }\r\n\r\n    onSubmitDate = () => {\r\n        const { currBoard, loggedInUser } = this.props\r\n        currBoard.activities.unshift({\r\n            id: makeId(), txt: `set card due date to \r\n        ${moment(this.state.dueDateNotSave).format(\"MMM DD\")}`, createdAt: Date.now(), byMember: loggedInUser\r\n        })\r\n        this.state.card.activities.unshift({\r\n            id: makeId(), txt: `set card due date to \r\n        ${moment(this.state.dueDateNotSave).format(\"MMM DD\")}`, createdAt: Date.now(), byMember: loggedInUser\r\n        })\r\n        this.setState(prevState => ({ card: { ...prevState.card, dueDate: this.state.dueDateNotSave } }), () => {\r\n            this.props.saveCard(this.state.card)\r\n        })\r\n    }\r\n\r\n    removeDueDate = () => {\r\n        const dueDate = '';\r\n        this.setState(prevState => ({ card: { ...prevState.card, dueDate } }), () => this.props.saveCard(this.state.card))\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        const field = target.name\r\n        const value = target.value\r\n        this.setState(prevState => ({ card: { ...prevState.card, [field]: value } }))\r\n    }\r\n\r\n    handleCommentChange = ({ target }) => {\r\n        this.setState(prevState => ({ comment: { ...prevState.comment, txt: target.value } }))\r\n    }\r\n\r\n    onAddComment = (ev) => {\r\n        ev.preventDefault();\r\n        const { comment, card } = this.state\r\n        if (!comment.txt) return;\r\n        comment.id = makeId();\r\n        comment.createdAt = Date.now();\r\n        comment.byMember = this.props.loggedInUser;\r\n        this.setState(prevState => ({ card: { ...prevState.card, comments: [comment, ...prevState.card.comments] } }), () => {\r\n            this.props.saveCard(this.state.card)\r\n        })\r\n        card.activities.unshift({\r\n            id: makeId(), txt: `set card comment to ${comment.txt}`,\r\n            createdAt: Date.now(), byMember: this.props.loggedInUser\r\n        })\r\n        this.setState({ comment: { txt: '' } })\r\n\r\n\r\n    }\r\n\r\n    removeComment = (comment) => {\r\n        this.setState(prevState => ({\r\n            card: {\r\n                ...prevState.card,\r\n                comments: prevState.card.comments.filter(currComment => currComment.id !== comment.id)\r\n            }\r\n        }), () => {\r\n            this.props.saveCard(this.state.card)\r\n        })\r\n        this.state.card.activities.unshift({\r\n            id: makeId(), txt: `removed card comment ${comment.txt}`,\r\n            createdAt: Date.now(), byMember: this.props.loggedInUser\r\n        })\r\n    }\r\n\r\n    onEditTitle = ({ target }) => {\r\n        this.setState(prevState => ({ card: { ...prevState.card, title: target.value } }))\r\n    }\r\n\r\n    onEditTitleFinish = () => {\r\n        this.state.card.activities.unshift({\r\n            id: makeId(), txt: `edited card title to ${this.state.card.title}`,\r\n            createdAt: Date.now(), byMember: this.props.loggedInUser\r\n        })\r\n        this.props.saveCard(this.state.card)\r\n    }\r\n\r\n    onSaveDesc = (ev) => {\r\n        ev.preventDefault()\r\n        this.setState({ prevCardDesc: this.state.card.description }, () => {\r\n            this.state.card.activities.unshift({\r\n                id: makeId(), txt: `edited card description`,\r\n                createdAt: Date.now(), byMember: this.props.loggedInUser\r\n            })\r\n            this.props.saveCard(this.state.card)\r\n            this.onDescShown(false)\r\n        })\r\n    }\r\n\r\n    onAddLabel = (currLabel) => {\r\n        let currCard = this.getCurrCard();\r\n        const labelIdx = currCard.labels.findIndex(label => label.id === currLabel.id);\r\n\r\n        if (labelIdx === -1) {\r\n            this.state.card.activities.unshift({\r\n                id: makeId(), txt: `add label: ${currLabel.title} to the card`,\r\n                createdAt: Date.now(), byMember: this.props.loggedInUser\r\n            })\r\n            currCard.labels.push(currLabel)\r\n        }\r\n        else {\r\n            this.state.card.activities.unshift({\r\n                id: makeId(), txt: `removed label: ${currLabel.title} from the card`,\r\n                createdAt: Date.now(), byMember: this.props.loggedInUser\r\n            })\r\n            currCard.labels.splice(labelIdx, 1)\r\n        }\r\n        this.setState({ card: currCard }, () => {\r\n            this.props.saveCard(this.state.card)\r\n        })\r\n    }\r\n\r\n    onAddMember = (currMember) => {\r\n        let currCard = this.getCurrCard();\r\n        const memberIdx = currCard.members.findIndex(member => member._id === currMember._id);\r\n\r\n        if (memberIdx === -1) {\r\n            this.state.card.activities.unshift({\r\n                id: makeId(), txt: `add member:  ${currMember.username} to the card`,\r\n                createdAt: Date.now(), byMember: this.props.loggedInUser\r\n            })\r\n            currCard.members.push(currMember)\r\n        }\r\n        else {\r\n            this.state.card.activities.unshift({\r\n                id: makeId(), txt: `removed member:  ${currMember.username} from the card`,\r\n                createdAt: Date.now(), byMember: this.props.loggedInUser\r\n            })\r\n            currCard.members.splice(memberIdx, 1)\r\n        }\r\n        this.setState({ card: currCard }, () => {\r\n\r\n            this.props.saveCard(this.state.card)\r\n        })\r\n    }\r\n\r\n    getTwoChars(str) {\r\n        let twoChars;\r\n        if (str.split(' ').length !== 2) twoChars = str?.charAt(0)\r\n        else twoChars = str?.charAt(0) + str.split(' ')[1].charAt(0)\r\n        if (!twoChars) twoChars = ''\r\n        return twoChars\r\n    }\r\n\r\n    onAddChecklist = () => {\r\n        let newChecklist = {\r\n            id: makeId(),\r\n            title: 'Checklist',\r\n            todos: []\r\n        }\r\n        this.setState(prevState => ({\r\n            card: {\r\n                ...prevState.card,\r\n                checklists: [...prevState.card.checklists, newChecklist]\r\n            }\r\n        }), () => {\r\n            this.state.card.activities.unshift({\r\n                id: makeId(), txt: `added checklist to the card`,\r\n                createdAt: Date.now(), byMember: this.props.loggedInUser\r\n            })\r\n            this.props.saveCard(this.state.card)\r\n        })\r\n    }\r\n\r\n    onEditChecklistTitle = (checklistId, title) => {\r\n        this.setState(prevState => ({\r\n            card: {\r\n                ...prevState.card,\r\n                checklists: prevState.card.checklists.map(checklist => {\r\n                    if (checklist.id === checklistId) checklist.title = title\r\n                    return checklist\r\n                })\r\n            }\r\n        }), () => { this.props.saveCard(this.state.card) })\r\n    }\r\n\r\n    onAddTodo = (checklistId, newTodo) => {\r\n        this.setState(prevState => ({\r\n            card: {\r\n                ...prevState.card,\r\n                checklists: prevState.card.checklists.map(checklist => {\r\n                    if (checklist.id === checklistId) {\r\n                        if (!newTodo.id) {\r\n                            checklist.todos.push(newTodo)\r\n                            newTodo.id = makeId();\r\n                            this.state.card.activities.unshift({\r\n                                id: makeId(), txt: `added todo ${newTodo.title} to the card`,\r\n                                createdAt: Date.now(), byMember: this.props.loggedInUser\r\n                            })\r\n                        } else {\r\n                            checklist.todos = checklist.todos.map(todo => {\r\n                                if (todo.id === newTodo.id) return newTodo\r\n                                return todo\r\n                            })\r\n                        }\r\n                    }\r\n                    return checklist\r\n                })\r\n            }\r\n        }), () => {\r\n            this.props.saveCard(this.state.card)\r\n        })\r\n    }\r\n\r\n    onRemoveTodo = (checklistId, todo) => {\r\n        this.setState(prevState => ({\r\n            card: {\r\n                ...prevState.card,\r\n                checklists: prevState.card.checklists.map(checklist => {\r\n                    if (checklist.id === checklistId) {\r\n                        checklist.todos = checklist.todos.filter(currTodo => currTodo.id !== todo.id)\r\n                    }\r\n                    return checklist\r\n                })\r\n            }\r\n        }), () => {\r\n            this.state.card.activities.unshift({\r\n                id: makeId(), txt: `removed todo ${todo.title} from the card`,\r\n                createdAt: Date.now(), byMember: this.props.loggedInUser\r\n            })\r\n            this.props.saveCard(this.state.card)\r\n        })\r\n    }\r\n\r\n    onRemoveChecklist = (checklist) => {\r\n        this.setState(prevState => ({\r\n            card: {\r\n                ...prevState.card,\r\n                checklists: prevState.card.checklists.filter(currChecklist => currChecklist.id !== checklist.id)\r\n            }\r\n        }), () => {\r\n            this.state.card.activities.unshift({\r\n                id: makeId(), txt: `removed checklist ${checklist.title} from the card`,\r\n                createdAt: Date.now(), byMember: this.props.loggedInUser\r\n            })\r\n            this.props.saveCard(this.state.card)\r\n        })\r\n    }\r\n\r\n\r\n    onToggleAction = (action) => {\r\n        let actions = this.state.isShown;\r\n        for (const key in actions) {\r\n            if (key !== action) {\r\n                actions[key] = false;\r\n            }\r\n        }\r\n        actions[action] = !actions[action];\r\n        this.setState({ isShown: actions });\r\n    }\r\n\r\n    onOpenUpload = () => {\r\n        this.inputElement.click();\r\n    }\r\n\r\n    onUploadImg = async ev => {\r\n        this.setState({ isUploadImg: true })\r\n        const imgUrl = await uploadImg(ev)\r\n        this.setState({ isUploadImg: false, isFinishUpload: true })\r\n        this.setState(prevState => ({ card: { ...prevState.card, imgUrl } }), () => {\r\n            this.state.card.activities.unshift({\r\n                id: makeId(), txt: `uploaded image to the card`,\r\n                createdAt: Date.now(), byMember: this.props.loggedInUser\r\n            })\r\n            this.props.saveCard(this.state.card)\r\n        })\r\n    }\r\n\r\n    onRemoveImg = () => {\r\n        this.setState(prevState => ({ card: { ...prevState.card, imgUrl: null } }), () => {\r\n            this.state.card.activities.unshift({\r\n                id: makeId(), txt: `removed image from the card`,\r\n                createdAt: Date.now(), byMember: this.props.loggedInUser\r\n            })\r\n            this.props.saveCard(this.state.card)\r\n        })\r\n    }\r\n\r\n    moveCardToStack = (stackDest) => {\r\n        this.props.currBoard.stacks.forEach(stack => {\r\n            let cardIdx = stack.cards.findIndex(card => card.id === this.state.card.id)\r\n            if (cardIdx !== -1) {\r\n                stack.cards.splice(cardIdx, 1);\r\n            }\r\n            if (stack.title === stackDest.title) {\r\n                stack.cards.push(this.state.card)\r\n            }\r\n        })\r\n        this.state.card.activities.unshift({\r\n            id: makeId(), txt: `moved card to stack ${stackDest.title}`,\r\n            createdAt: Date.now(), byMember: this.props.loggedInUser\r\n        })\r\n        this.props.save(this.props.currBoard)\r\n    }\r\n\r\n    onToggleRemoveCard = () => {\r\n        this.setState(prevState => ({ isOpenModalRemove: !prevState.isOpenModalRemove }))\r\n    }\r\n\r\n    onRemoveCard = () => {\r\n        const { currBoard, save, history, loggedInUser } = this.props\r\n        if (currBoard.isPublic) return;\r\n        currBoard.stacks.forEach(stack => {\r\n            let cardIdx = stack.cards.findIndex(card => {\r\n                return card.id === this.state.card.id\r\n            })\r\n            if (cardIdx !== -1) {\r\n                stack.cards.splice(cardIdx, 1);\r\n            }\r\n        })\r\n        currBoard.activities.unshift({ id: makeId(), txt: `has removed a card`, createdAt: Date.now(), byMember: loggedInUser })\r\n        save(this.props.currBoard);\r\n        history.push(`/boards/${this.props.currBoard._id}`);\r\n    }\r\n\r\n    onAddTimeEstimation = (timeEstimation) => {\r\n        timeEstimation.approved = false;\r\n        this.setState(prevState => ({ card: { ...prevState.card, timeEstimation } }), () => {\r\n            this.state.card.activities.unshift({\r\n                id: makeId(), txt: `added time estimation to card`,\r\n                createdAt: Date.now(), byMember: this.props.loggedInUser\r\n            })\r\n            this.props.saveCard(this.state.card)\r\n        })\r\n    }\r\n\r\n    removeCardEstimation = () => {\r\n        this.setState(prevState => ({ card: { ...prevState.card, timeEstimation: null } }), () => {\r\n            this.state.card.activities.unshift({\r\n                id: makeId(), txt: `removed time estimation from the card`,\r\n                createdAt: Date.now(), byMember: this.props.loggedInUser\r\n            })\r\n            this.props.saveCard(this.state.card)\r\n        })\r\n    }\r\n\r\n    onApproveTimeEstimation = () => {\r\n        this.setState(prevState => ({ card: { ...prevState.card, timeEstimation: { ...prevState.card.timeEstimation, approved: true } } }), () => {\r\n            this.state.card.activities.unshift({\r\n                id: makeId(), txt: `confirmed the time estimate`,\r\n                createdAt: Date.now(), byMember: this.props.loggedInUser\r\n            })\r\n            this.props.saveCard(this.state.card)\r\n        })\r\n    }\r\n\r\n    onFocusComment = () => {\r\n        this.setState(prevState => ({ isFocusComment: !prevState.isFocusComment }), () => {\r\n            this.setState({ comment: { txt: 'Comment on time estimation: ' } })\r\n        })\r\n    }\r\n\r\n    onChangeBgColor = (bgColor) => {\r\n        this.setState(prevState => ({ card: { ...prevState.card, bgColor } }), () => this.props.saveCard(this.state.card))\r\n        this.onToggleAction('bgColor')\r\n    }\r\n\r\n    onChagneLabelColor = (labelId, color, title) => {\r\n        console.log('title',title);\r\n        \r\n        this.props.currBoard.boardLabels.find(label => {\r\n            if (label.id === labelId) {\r\n                if (color) label.color = color;\r\n                if (title) label.title = title;\r\n            }\r\n        })\r\n        this.state.card.labels.find(label => {\r\n            if (label.id === labelId) {\r\n                if (color) label.color = color;\r\n                if (title) label.title = title;\r\n            }\r\n        })\r\n        this.props.save(this.props.currBoard)\r\n    }\r\n\r\n    render() {\r\n        const { card, isDescShown, comment, isShown, isUploadImg, isOpenModalRemove, isFocusComment } = this.state\r\n        const { onToggleAction } = this;\r\n\r\n        return ((!card) ? 'Loading...' :\r\n            <>\r\n                <div className=\"screen\" onMouseDown={this.onBackBoard} >\r\n                    <div className=\"modal-container shadow-drop-2-center card-details-modal\" onMouseDown={(ev) => ev.stopPropagation()}>\r\n                        <div className=\"modal-header flex align-center space-between\">\r\n                            <div className=\"task-title-container flex align-center\">\r\n                                <img className=\"img-icon\" src=\"/assets/img/task.png\" alt=\"\" />\r\n                                <input type=\"text\" name=\"title\" autoComplete=\"off\" className=\"card-title\" onChange={this.onEditTitle} onBlur={this.onEditTitleFinish} value={card.title} />\r\n                            </div>\r\n                            <div className=\"close-modal flex justify-content align-center\" onClick={this.onBackBoard}><img className=\"img-icon\" src=\"/assets/img/close.png\" alt=\"\" /></div>\r\n                        </div>\r\n\r\n                        <div className=\"card-container flex\">\r\n                            <aside className=\"card-content\">\r\n                                {card.timeEstimation && <CardShowTimeEstimation card={card} onApproveTimeEstimation={this.onApproveTimeEstimation} onFocusComment={this.onFocusComment} />}\r\n                                <CardPreviewActions card={card} getTwoChars={this.getTwoChars} />\r\n                                <CardDescription description={card.description} onSaveDesc={this.onSaveDesc} handleChange={this.handleChange} isShown={this.onDescShown} isSubmitShown={isDescShown} />\r\n                                {(isUploadImg || card.imgUrl) && <CardImg card={card} isUploadImg={isUploadImg} onRemoveImg={this.onRemoveImg} />}\r\n                                {card.checklists && card.checklists.map(checklist => <CardChecklist key={checklist.id} checklist={checklist} addTodo={this.onAddTodo} onEditChecklistTitle={this.onEditChecklistTitle} onRemoveTodo={this.onRemoveTodo} onRemoveChecklist={this.onRemoveChecklist} />)}\r\n                                <CardComments isFocusComment={isFocusComment} comments={card.comments} onAddComment={this.onAddComment} handleChange={this.handleCommentChange} comment={comment.txt} getTwoChars={this.getTwoChars} removeComment={this.removeComment} />\r\n                                {card.activities && <CardActivity activities={card.activities} getTwoChars={this.getTwoChars} />}\r\n                            </aside>\r\n                            <aside className=\"card-actions\">\r\n                                <div className=\"actions-title\">Actions:</div>\r\n                                <ul className=\"actions-list clean-list\">\r\n                                    <Link title=\"Edit Card Members\" to=\"#\" onClick={() => onToggleAction('members')}><li><img src=\"/assets/img/user-icon.png\" alt=\"\" />Members</li></Link>\r\n                                    <Link title=\"Edit Card Labels\" to=\"#\" onClick={() => onToggleAction('label')}><li><img src=\"/assets/img/label-icon.png\" alt=\"\" />Labels</li></Link>\r\n                                    <Link title=\"Add Checklist\" to=\"#\" onClick={this.onAddChecklist}><li><img src=\"/assets/img/checklist-icon.png\" alt=\"\" />Checklist</li></Link>\r\n                                    <Link title=\"Set Due Date\" to=\"#\" onClick={() => onToggleAction('dueDate')}><li><img src=\"/assets/img/due-date.png\" alt=\"\" />Due Date</li></Link>\r\n                                    <Link title=\"Set Time Estimation\" to=\"#\" onClick={() => onToggleAction('timeEstimation')}><li><img src=\"/assets/img/clock-icon.png\" alt=\"\" />Time Estimation</li></Link>\r\n                                    <Link title=\"Add Image\" to=\"#\" onClick={() => this.onOpenUpload()}><li><img src=\"/assets/img/style.png\" alt=\"\" />Add Image</li></Link>\r\n                                    <Link title=\"Change Card Background\" to=\"#\" onClick={() => this.onToggleAction('bgColor')}><li><img src=\"/assets/img/palette.png\" alt=\"\" />Change Background</li></Link>\r\n                                    <input type=\"file\" ref={input => this.inputElement = input} name=\"imgUrl\" onChange={this.onUploadImg} hidden />\r\n                                    <Link title=\"Move Card\" to=\"#\" onClick={() => this.onToggleAction('move')}><li><img src=\"/assets/img/back.png\" className=\"img-rotate\" alt=\"\" />Move Card</li></Link>\r\n                                    <Link title=\"Remove Card\" to=\"#\" onClick={this.onToggleRemoveCard}><li className=\"li-last-child\"><img src=\"/assets/img/trash-white.png\" alt=\"\" />Remove Card</li></Link>\r\n\r\n                                    {isShown.dueDate && <ActionContainer isShown={isShown} onChange={this.onChangeDate} onSubmitDate={this.onSubmitDate} onToggleAction={onToggleAction} value={card.dueDate} removeDueDate={this.removeDueDate} />}\r\n                                    {isShown.label && <ActionContainer board={this.props.currBoard} isShown={isShown} addLabel={this.onAddLabel} onToggleAction={onToggleAction} card={card} onChagneLabelColor={this.onChagneLabelColor} />}\r\n                                    {isShown.members && <ActionContainer board={this.props.currBoard} isShown={isShown} card={card} addMember={this.onAddMember} onToggleAction={onToggleAction} getCurrCard={this.getCurrCard} />}\r\n                                    {isShown.bgColor && <ActionContainer board={this.props.currBoard} isShown={isShown} card={card} onChangeBgColor={this.onChangeBgColor} onToggleAction={onToggleAction} getCurrCard={this.getCurrCard} />}\r\n                                    {isShown.move && <ActionContainer board={this.props.currBoard} isShown={isShown} card={card} onToggleAction={onToggleAction} moveCardToStack={this.moveCardToStack} />}\r\n                                    {isShown.timeEstimation && <ActionContainer board={this.props.currBoard} isShown={isShown} card={card} onToggleAction={onToggleAction} onAddTimeEstimation={this.onAddTimeEstimation} removeCardEstimation={this.removeCardEstimation} />}\r\n                                    {isShown.changeLabel && <ActionContainer isShown={isShown} onToggleAction={onToggleAction} card={card} />}\r\n\r\n                                </ul>\r\n                                {isOpenModalRemove && <RemoveCard onToggleRemoveCard={this.onToggleRemoveCard} onRemoveCard={this.onRemoveCard} />}\r\n\r\n                            </aside>\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    save,\r\n    loadBoard,\r\n    saveCard\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currBoard: state.board.currBoard,\r\n        loggedInUser: state.user.loggedInUser\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CardDetails);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { loadUsers } from '../store/actions/userActions'\r\nimport OutsideClickHandler from 'react-outside-click-handler';\r\n\r\nclass AddMember extends Component {\r\n\r\n    state = {\r\n        filterBy: {\r\n            board: null,\r\n            q: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ filterBy: { board: this.props.currBoard, q: '' } }, () => this.props.loadUsers(this.state.filterBy))\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        const field = target.name\r\n        const value = target.value\r\n\r\n        this.setState(prevState => ({ filterBy: { ...prevState.filterBy, [field]: value } }), () => {\r\n            this.props.loadUsers(this.state.filterBy)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const { users, onClose, onAddMember } = this.props\r\n        const { filterBy } = this.state\r\n\r\n        return ((!users) ? 'Loading...' :\r\n            <OutsideClickHandler onOutsideClick={() => onClose()} display={'contents'}>\r\n                <div className=\"add-member-container slide-bottom\">\r\n                    <div className=\"add-member-title flex space-between align-center\">\r\n                        Add Members\r\n                    <img src=\"/assets/img/close-white.png\" className=\"close-icon\" onClick={() => onClose()} alt=\"\" />\r\n                    </div>\r\n                    <input type=\"text\" placeholder=\"Enter user name\" autoComplete=\"off\" name=\"q\" value={filterBy.q} onChange={this.handleChange} className=\"add-member-input\" />\r\n                    <div className=\"members-list flex column\">\r\n                        {users.map((user, idx) => <Link to=\"#\" key={idx} onClick={() => onAddMember(user)} className=\"single-member\">{user.username}</Link>)}\r\n                    </div>\r\n                </div>\r\n            </OutsideClickHandler>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        users: state.user.users,\r\n        currBoard: state.board.currBoard\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadUsers\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddMember);","import React from 'react'\r\n\r\nexport default function BoardBackground(props) {\r\n\r\n    const bgColors = ['#fd9644', '#fc5c65', '#fed330', '#26de81', '#2bcbba', '#45aaf2', '#4b7bec', '#a55eea', '#122961']\r\n    const bgImgs = ['/assets/img/bg-beach.jpg', '/assets/img/bg-flowers.jpg',\r\n        '/assets/img/bg-sunset.jpg', '/assets/img/bg-view.jpg',\r\n        '/assets/img/bg-view2.jpg', '/assets/img/bg-view3.jpg',\r\n        '/assets/img/bg-view4.jpg', '/assets/img/bg-water.jpg', '/assets/img/bg-view5.jpg'];\r\n    const { type, onSetBg } = props\r\n\r\n    if (type === 'image') {\r\n        return (\r\n            <div className=\"backgrounds-container\">\r\n                {bgImgs.map((img, idx) => <div key={idx} className=\"background\" onClick={() => onSetBg(img, 'img')} style={{ backgroundImage: `url(${img})`, backgroundSize: '100%',backgroundPosition:'center' }}></div>)}\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"backgrounds-container\">\r\n                {bgColors.map((color, idx) => <div key={idx} className=\"background\" onClick={() => onSetBg(color, 'color')} style={{ backgroundColor: color }}></div>)}\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport BoardBackground from '../cmps/BoardBackground'\r\nimport { save, loadBoard } from '../store/actions/boardActions'\r\nimport { connect } from 'react-redux'\r\n\r\nclass BoardStyling extends Component {\r\n\r\n    state = {\r\n        bgChooseShown: ''\r\n    }\r\n\r\n    setBgShown = (bgChooseShown) => {\r\n        this.setState({ bgChooseShown })\r\n    }\r\n\r\n    render() {\r\n        const { bgChooseShown } = this.state\r\n        const { onSetBg } = this.props\r\n        return (\r\n            <div className=\"board-styling-container\">\r\n                <div className=\"board-styling-title flex align-center\">\r\n                    {bgChooseShown && <img src=\"/assets/img/back.png\" onClick={() => this.setBgShown('')} className=\"back small-icon\" alt=\"\" />}Board Styling\r\n                </div>\r\n                {!bgChooseShown && <button onClick={() => this.setBgShown('color')} className=\"background-choose color-choose\"><span>Background Color</span></button>}\r\n                {!bgChooseShown && <button onClick={() => this.setBgShown('image')} className=\"background-choose img-choose\"><span>Background Image</span></button>}\r\n                {bgChooseShown && <BoardBackground onSetBg={onSetBg} type={bgChooseShown} />}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    save,\r\n    loadBoard\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currBoard: state.board.currBoard\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BoardStyling);","import React from 'react'\r\nimport moment from 'moment'\r\n\r\nexport default function BoardActivities(props) {\r\n    const { board } = props\r\n    return (\r\n        <div className=\"activities-container\">\r\n            <h2 className=\"activities-title\">Activities</h2>\r\n            <ul className=\"activities clean-list\">\r\n                {board.activities.map((activity, idx) => {\r\n                    return <li key={idx}>\r\n                        <span className=\"bold\">{activity.byMember.username}</span> {activity.txt}\r\n                        <p className=\"activity-at\">{moment(activity.createdAt).fromNow()}</p>\r\n                    </li>\r\n                })}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function ReomveBoard(props) {\r\n    return (\r\n        <div className=\"remove-board-container\">\r\n            <div className=\"remove-board-title flex align-center space-between\">\r\n                Remove board\r\n                <img src=\"/assets/img/close.png\" className=\"close-icon\" onClick={() => props.onToggleRemoveBoard()} alt=\"\" />\r\n            </div>\r\n            <p>Are you sure you want to remove the board?</p>\r\n            <button className=\"btn btn-danger\" onClick={() => props.onRemoveBoard()}>Yes, remove!</button>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { removeBoard } from '../store/actions/boardActions';\r\nimport { connect } from 'react-redux';\r\nimport OutsideClickHandler from 'react-outside-click-handler';\r\nimport BoardStyling from '../cmps/BoardStyling';\r\nimport BoardActivities from '../cmps/BoardActivities';\r\nimport RemoveBoard from '../cmps/RemoveBoard';\r\n\r\nclass BoardMenu extends Component {\r\n\r\n    state = {\r\n        isStylingShown: false,\r\n        isRemoveBoardShown: false\r\n    }\r\n\r\n    onToggleStyling = () => this.setState(prevState => ({ isStylingShown: !prevState.isStylingShown }))\r\n    onToggleRemoveBoard = () => this.setState(prevState => ({ isRemoveBoardShown: !prevState.isRemoveBoardShown }))\r\n    onRemoveBoard = async () => {\r\n        if (this.props.board.isPublic) return\r\n        await this.props.removeBoard(this.props.board._id)\r\n        this.props.history.push('/boards')\r\n    }\r\n\r\n    onToggleStatistics = () => {\r\n        this.props.onClose();\r\n        this.props.toggleShowStatistics();\r\n    }\r\n\r\n    onCloseMenu = () => {\r\n        this.props.onClose()\r\n        this.setState({ isStylingShown: false, isRemoveBoardShown: false })\r\n    }\r\n\r\n    render() {\r\n        const { onSetBg, board, isOpen, isShowingStatistics } = this.props\r\n        const { isStylingShown, isRemoveBoardShown } = this.state\r\n\r\n        return (\r\n            <div className={`board-menu-container ${isOpen ? 'board-menu-open' : ''}`}>\r\n\r\n                <div className=\"board-menu-title flex space-between align-center\">\r\n                    Board Managment\r\n                    <img src=\"/assets/img/close-white.png\" className=\"close-icon\" onClick={this.onCloseMenu} alt=\"\" />\r\n                </div>\r\n\r\n                <div className=\"board-menu-content\">\r\n                    {!isStylingShown && <ul className=\"board-menu-list clean-list\">\r\n                        <Link to=\"#\" onClick={this.onToggleStyling}><li><img src=\"/assets/img/style.png\" className=\"small-icon\" alt=\"\" />Board Styling</li></Link>\r\n                        <div className=\"pointer\" onClick={() => this.onToggleStatistics()} ><li className={`${(isShowingStatistics) ? 'active-stats' : ''}`}><img src=\"/assets/img/stats.png\" className=\"small-icon\" alt=\"\" />Show Board Statistics</li></div>\r\n                        <Link to=\"#\" onClick={this.onToggleRemoveBoard}><li className=\"remove-board\"><img src=\"/assets/img/trash.png\" className=\"small-icon\" alt=\"\" />Remove Board</li></Link>\r\n                    </ul>}\r\n\r\n                    {isRemoveBoardShown && <RemoveBoard onToggleRemoveBoard={this.onToggleRemoveBoard} onRemoveBoard={this.onRemoveBoard} />}\r\n                    {!isStylingShown && <BoardActivities board={board} />}\r\n                    {isStylingShown && <BoardStyling onSetBg={onSetBg} onToggleStyling={this.onToggleStyling} />}\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    removeBoard\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(BoardMenu)","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function FilterCardsList(props) {\r\n    const { boardId } = props\r\n\r\n    function onClickCard(cardId) {\r\n        props.history.push(`/boards/${boardId}/card/${cardId}`)\r\n    }\r\n\r\n    return (\r\n        <div className=\"filter-cards-container\">\r\n            <div className=\"filter-scroll-cards\">\r\n                {props.cards.map((card, idx) => {\r\n                    return <div className=\"filter-card\" onClick={() => onClickCard(card.id)} key={idx}>\r\n                        {card.title}\r\n                    </div>\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport FilterCardList from './FilterCardsList'\r\n\r\nclass BoardFilter extends Component {\r\n\r\n    state = {\r\n        filterBy: '',\r\n        cards: []\r\n    }\r\n\r\n    onSetFilterBy = ({ target }) => {\r\n        if (!target.value) return this.clearFilter()\r\n        this.setState({ filterBy: target.value }, () => this.filterBy(this.state.filterBy))\r\n    }\r\n\r\n    filterBy = () => {\r\n        const { filterBy } = this.state\r\n        const { currBoard } = this.props\r\n        const filterCards = currBoard.stacks.map(stack => {\r\n            return stack.cards.filter(card => {\r\n                return card.title.toLowerCase().includes(filterBy.toLowerCase())\r\n                    || card.description.toLowerCase().includes(filterBy.toLowerCase())\r\n            })\r\n        })\r\n        this.setState({ cards: [].concat(...filterCards) })\r\n    }\r\n\r\n    clearFilter = () => {\r\n        setTimeout(() => {\r\n            this.setState({ cards: [], filterBy: '' })\r\n        }, 100);\r\n    }\r\n\r\n    render() {\r\n        const { currBoard, history } = this.props\r\n        const { cards, filterBy } = this.state\r\n\r\n        return (\r\n            <>\r\n                <input className={`search-container flex align-center`} autoComplete=\"off\" name=\"filterBy\" value={filterBy} onBlur={this.clearFilter} onChange={this.onSetFilterBy} />\r\n                {cards.length > 0 && <FilterCardList cards={cards} history={history} boardId={currBoard._id} />}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currBoard: state.board.currBoard\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(BoardFilter);","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { save } from '../store/actions/boardActions'\r\nimport AddMember from './AddMember'\r\nimport BoardMenu from './BoardMenu'\r\nimport BoardFilter from './BoardFilter'\r\nimport { makeId } from '../services/utilService'\r\n\r\n\r\nclass BoardOptions extends Component {\r\n\r\n    state = {\r\n        isAddMemberShown: false,\r\n        isBoardMenuShown: false,\r\n        currBoard: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ currBoard: this.props.currBoard })\r\n    }\r\n\r\n    getTwoChars(str) {\r\n        let twoChars;\r\n        if (str.split(' ').length !== 2) twoChars = str?.charAt(0)\r\n        else twoChars = str?.charAt(0) + str.split(' ')[1].charAt(0)\r\n        if (!twoChars) twoChars = ''\r\n        return twoChars\r\n    }\r\n\r\n    onToggleAddMember = () => this.setState(prevState => ({ isAddMemberShown: !prevState.isAddMemberShown }))\r\n    onToggleBoardMenu = () => this.setState(prevState => ({ isBoardMenuShown: !prevState.isBoardMenuShown }))\r\n\r\n    onAddMember = member => {\r\n        const { loggedInUser, currBoard } = this.props\r\n\r\n        currBoard.members.unshift(member)\r\n        currBoard.activities.unshift({ id: makeId(), txt: `added ${member.username} to the board`, createdAt: Date.now(), byMember: loggedInUser })\r\n        this.props.save(currBoard)\r\n        this.onToggleAddMember()\r\n    }\r\n\r\n    onRemoveMember = currMember => {\r\n        const { loggedInUser, currBoard } = this.props\r\n\r\n        const memberIdx = currBoard.members.findIndex(member => currMember._id === member._id);\r\n        currBoard.members.splice(memberIdx, 1)\r\n        currBoard.activities.unshift({ id: makeId(), txt: `removed ${currMember.username} from the board`, createdAt: Date.now(), byMember: loggedInUser })\r\n        this.props.save(currBoard)\r\n        this.setState({ currBoard })\r\n    }\r\n\r\n    render() {\r\n        const { board, onSetBg, history, toggleShowStatistics, isShowingStatistics } = this.props;\r\n        const { isAddMemberShown, isBoardMenuShown } = this.state;\r\n\r\n        return (\r\n            <div className={`board-options-container ${(isShowingStatistics) ? 'stats-margin' : ''}`}>\r\n                <div className=\"board-title flex align-center justify-center\">{board.title}</div>\r\n\r\n                <div className=\"board-members flex\">\r\n                    {board.members.map((member, idx) => <div key={idx} className=\"member flex justify-center align-center\" style={{ backgroundImage: `url(${member.imgUrl})`, backgroundColor: member.bgColor }}><img onClick={() => this.onRemoveMember(member)} src=\"/assets/img/close.png\" className=\"remove-member\" alt=\"\" />{this.getTwoChars(member.fullname)}</div>)}\r\n                </div>\r\n\r\n                <div className=\"board-options flex\">\r\n                    <BoardFilter history={history} />\r\n\r\n                    <button className=\"option flex align-center\" onClick={() => this.onToggleAddMember()}>\r\n                        <img src=\"/assets/img/add-user.png\" alt=\"\" />\r\n                    </button>\r\n                    <button className=\"option flex align-center\" onClick={() => this.onToggleBoardMenu()}>\r\n                        <img src=\"/assets/img/menu.png\" alt=\"\" />\r\n                    </button>\r\n                </div>\r\n                {isAddMemberShown && <AddMember onClose={this.onToggleAddMember} onAddMember={this.onAddMember} />}\r\n                {<BoardMenu toggleShowStatistics={toggleShowStatistics} isOpen={isBoardMenuShown} history={history}\r\n                    onSetBg={onSetBg} board={board} onClose={this.onToggleBoardMenu} isShowingStatistics={isShowingStatistics} />}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    save\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currBoard: state.board.currBoard,\r\n        loggedInUser: state.user.loggedInUser\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BoardOptions);","import React from 'react'\r\nimport { ResponsivePie } from '@nivo/pie';\r\n\r\nexport class StatisticsPie extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.statsTimeOut = null;\r\n    }\r\n\r\n    state = {\r\n        data: [{ id: '', label: '', value: 0, color: '#fff' }]\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.statsTimeOut = setTimeout(() => {\r\n\r\n            this.setState({ data: this.props.data });\r\n\r\n        }, 250)\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.data !== prevProps.data) {\r\n            this.setState({ data: this.props.data });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.statsTimeOut) clearTimeout(this.statsTimeOut);\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const getSliceColor = slice => slice.color;\r\n        const { data } = this.state;\r\n        return (\r\n            // <span className=\"pie-content\">\r\n            <ResponsivePie\r\n                data={data}\r\n                margin={{ top: 10, right: 80, bottom: 80, left: 80 }}\r\n                innerRadius={0.7}\r\n                padAngle={0}\r\n                cornerRadius={5}\r\n                colors={getSliceColor}\r\n                borderWidth={2}\r\n                borderColor={{ from: 'color', modifiers: [['darker', 0.2]] }}\r\n                radialLabelsSkipAngle={10}\r\n                radialLabelsTextXOffset={6}\r\n                radialLabelsTextColor={getSliceColor}\r\n                radialLabelsLinkOffset={-20}\r\n                radialLabelsLinkDiagonalLength={16}\r\n                radialLabelsLinkHorizontalLength={24}\r\n                radialLabelsLinkStrokeWidth={1}\r\n                radialLabelsLinkColor={{ from: 'color' }}\r\n                slicesLabelsSkipAngle={10}\r\n                slicesLabelsTextColor=\"#333333\"\r\n                animate={true}\r\n                motionStiffness={90}\r\n                motionDamping={15}\r\n                theme={{\r\n\r\n                    fontFamily: 'openSansBold',\r\n                    fontSize: 14,\r\n                }}\r\n                legends={[\r\n                    // {\r\n                    //     anchor: 'bottom',\r\n                    //     direction: 'row',\r\n                    //     translateY: 56,\r\n                    //     itemWidth: 50,\r\n                    //     itemHeight: 18,\r\n                    //     itemTextColor: '#999',\r\n                    //     symbolSize: 18,\r\n                    //     symbolShape: 'circle',\r\n                    //     effects: [\r\n                    //         {\r\n                    //             on: 'hover',\r\n                    //             style: {\r\n                    //                 itemTextColor: '#000'\r\n                    //             }\r\n                    //         }\r\n                    //     ]\r\n                    // }\r\n                ]}\r\n\r\n            />\r\n            /* </span> */\r\n        )\r\n\r\n    }\r\n\r\n};","import React from 'react'\r\nimport { ResponsiveBar } from '@nivo/bar'\r\n\r\nexport class StatisticsBar extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.statsTimeOut = null;\r\n    }\r\n\r\n    state = {\r\n        data: [{ member: '', Tasks: 0, 'Done Tasks': 0 }]\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.statsTimeOut = setTimeout(() => {\r\n\r\n            this.setState({ data: this.props.data, maxTasks: this.props.maxTasks });\r\n\r\n        }, 250)\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.data !== prevProps.data) {\r\n            this.setState({ data: this.props.data, maxTasks: this.props.maxTasks });\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.statsTimeOut) clearTimeout(this.statsTimeOut);\r\n    }\r\n\r\n    render() {\r\n\r\n        const getUserColor = user => {\r\n            return (user.id === 'Done Tasks') ? '#525252' : '#1ee76f';\r\n            // return (user.id === 'Done Tasks') ? '#525252' : (user.data.color) ? user.data.color : '#39EA80';\r\n        }\r\n\r\n        const { data, maxTasks } = this.state;\r\n        return (\r\n\r\n            <ResponsiveBar\r\n                data={data}\r\n                keys={['Tasks', 'Done Tasks']}\r\n                indexBy=\"member\"\r\n                margin={{ top: 10, right: 130, bottom: 50, left: 60 }}\r\n                padding={0.3}\r\n                colors={getUserColor}\r\n                borderColor={{ from: 'color', modifiers: [['darker', 1.6]] }}\r\n                axisTop={null}\r\n                axisRight={null}\r\n                axisBottom={{\r\n                    tickSize: 5,\r\n                    tickPadding: 5,\r\n                    tickRotation: 0,\r\n                    legend: 'Users',\r\n                    legendPosition: 'middle',\r\n                    legendOffset: 40,\r\n                }}\r\n                axisLeft={{\r\n                    tickValues: maxTasks,\r\n                    tickSize: 5,\r\n                    tickPadding: 5,\r\n                    tickRotation: 0,\r\n                    legend: 'Tasks',\r\n                    legendPosition: 'middle',\r\n                    legendOffset: -40\r\n                }}\r\n                labelSkipWidth={12}\r\n                labelSkipHeight={12}\r\n                labelTextColor={{ from: 'color', modifiers: [['darker', 1.6]] }}\r\n                legends={[\r\n                    {\r\n                        dataFrom: \"keys\",\r\n                        anchor: 'bottom-right',\r\n                        direction: 'column',\r\n                        justify: false,\r\n                        translateX: 120,\r\n                        translateY: 0,\r\n                        itemsSpacing: 2,\r\n                        itemWidth: 100,\r\n                        itemHeight: 20,\r\n                        itemDirection: 'left-to-right',\r\n                        itemOpacity: 0.85,\r\n                        symbolSize: 20,\r\n                        effects: [\r\n                            {\r\n                                on: 'hover',\r\n                                style: {\r\n                                    itemOpacity: 1\r\n                                }\r\n                            }\r\n                        ]\r\n                    }\r\n                ]}\r\n                animate={true}\r\n                motionStiffness={90}\r\n                motionDamping={15}\r\n                theme={{\r\n                    axis: {\r\n                        legend: {\r\n                            text: {\r\n                                fontFamily: 'openSansBold',\r\n                                fontSize: 14\r\n                            }\r\n                        },\r\n                        ticks: {\r\n                            text: {\r\n                                fontFamily: 'openSans',\r\n                                fontSize: 12\r\n                            }\r\n                        }\r\n                    },\r\n                    labels: {\r\n                        text: {\r\n                            fontFamily: 'openSans',\r\n                            fontSize: 14,\r\n                            stroke: '#fff',\r\n                            fill: '#fff',\r\n                            strokeWidth: 1.5,\r\n                        },\r\n                        \r\n                    },\r\n                    legends: {\r\n                        text: {\r\n                            fontFamily: 'openSansBold',\r\n                            fontSize: 14\r\n                        }\r\n\r\n                    }\r\n\r\n                }}\r\n            />\r\n\r\n\r\n        )\r\n    }\r\n};","import React from 'react'\r\n\r\nexport function StatisticsInfoBlock(props) {\r\n\r\n    const { info, type } = props;\r\n\r\n    return (\r\n        <span className=\"stat-info-block flex align-center justify-start\">\r\n            <div className=\"stat-info-img flex align-center justify-center\">\r\n                <img className={`stat-img ${type}`} src={`/assets/img/${type}.png`} alt=\"\" />\r\n            </div>\r\n            <div className=\"stat-info-details flex column align-center justify-content\">\r\n\r\n                <p className={`stats-info-p ${(type === 'timeEstimation') ? 'last-stat-info' : '' }`}>{info}</p>\r\n                <p className=\"secondary\">{(type === 'createdBy') ? 'created by' : (type === 'timeEstimation') ? 'time estimation' : type}</p>\r\n            </div>\r\n        </span>\r\n    );\r\n};","import React from 'react'\r\n\r\nimport { save, loadBoard } from '../store/actions/boardActions'\r\nimport { connect } from 'react-redux'\r\nimport { StatisticsPie } from '../cmps/StatisticsPie';\r\nimport { StatisticsBar } from '../cmps/StatisticsBar';\r\nimport { StatisticsInfoBlock } from '../cmps/StatisticsInfoBlock';\r\nimport moment from 'moment'\r\n\r\nclass BoardStatistics extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.elStats = React.createRef();\r\n        this.statsTimeOut = null;\r\n        this.boardStats = null;\r\n    }\r\n\r\n    state = {\r\n        board: {},\r\n        currView: 'byUsers',\r\n        cardCount: -1,\r\n        boardStats: null\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        if (this.props.currBoard) {\r\n            this.statsTimeOut = setTimeout(() => {\r\n                const boardStats = this.getBoardStats(this.props.currBoard);\r\n                this.setState({ board: this.props.currBoard, boardStats }, () => {\r\n                });\r\n            }, 250)\r\n        }\r\n\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.currBoard !== prevProps.currBoard) {\r\n            const boardStats = this.getBoardStats(this.props.currBoard);\r\n            this.setState({ board: this.props.currBoard, boardStats });\r\n        }\r\n\r\n\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (this.statsTimeOut) clearTimeout(this.statsTimeOut);\r\n    }\r\n\r\n\r\n    handleChange = ({ target }) => {\r\n        const field = target.name\r\n        const value = target.value\r\n\r\n        this.setState(prevState => ({ card: { ...prevState.card, [field]: value } }))\r\n    }\r\n\r\n    getStatsByLabels = (board) => {\r\n\r\n        let labels = {};\r\n\r\n        board.stacks.forEach((stack) => {\r\n            stack.cards.forEach((card) => {\r\n                card.labels.forEach((label) => {\r\n                    if (labels[label.title]) {\r\n                        labels[label.title].count += 1;\r\n                    } else {\r\n                        labels[label.title] = { count: 1, color: label.color };\r\n                    }\r\n                })\r\n\r\n            })\r\n        })\r\n        let labelStatsData = Object.keys(labels).map((labelTitle) => {\r\n            const labelInfo = labels[labelTitle];\r\n            return ({\r\n                id: labelTitle,\r\n                label: labelTitle,\r\n                value: labelInfo.count,\r\n                color: labelInfo.color\r\n            });\r\n        })\r\n\r\n        return labelStatsData;\r\n    }\r\n\r\n    getStatsByUsers = (board) => {\r\n\r\n        let users = {};\r\n        let maxTasks = 0;\r\n\r\n        board.stacks.forEach((stack) => {\r\n            stack.cards.forEach((card) => {\r\n\r\n                if (card.members.length) {\r\n                    card.members.forEach(member => {\r\n\r\n                        if (!users[member.username]) users[member.username] = { tasks: 0, doneTasks: 0, color: member.bgColor };\r\n\r\n                        let isDone = card.labels.some((label) => {\r\n                            return label.title === 'done';\r\n                        })\r\n\r\n                        users[member.username][(isDone) ? 'doneTasks' : 'tasks'] += 1;\r\n                        if(maxTasks < users[member.username]['tasks']) {\r\n                            maxTasks = users[member.username]['tasks'];\r\n                        }\r\n                    })\r\n\r\n                }\r\n            })\r\n        })\r\n\r\n        let userStatsData = Object.keys(users).map((username) => {\r\n            const userInfo = users[username];\r\n            return ({\r\n                member: username,\r\n                Tasks: userInfo.tasks - userInfo.doneTasks,\r\n                'Done Tasks': userInfo.doneTasks,\r\n                color: userInfo.color\r\n            });\r\n        })\r\n\r\n        return {userStatsData, maxTasks};\r\n    }\r\n\r\n    getStatsByDueDates = (board) => {\r\n\r\n        let workload = { 'On Schedule': 0, Delayed: 0 };\r\n        let cardCount = 0;\r\n        board.stacks.forEach((stack) => {\r\n            cardCount += stack.cards.length;\r\n\r\n            stack.cards.forEach((card) => {\r\n                if (card.dueDate !== '') {\r\n                    if (+moment(card.dueDate).format('x') > Date.now()) workload['On Schedule'] += 1;\r\n                    else workload.Delayed += 1;\r\n                }\r\n\r\n            })\r\n        })\r\n\r\n        if (!cardCount) return null;\r\n\r\n        if (this.state.cardCount !== cardCount) {\r\n            this.setState({ cardCount });\r\n        }\r\n\r\n\r\n        let dueDatesStatsData = Object.keys(workload).map((type) => {\r\n\r\n            return ({\r\n                id: type,\r\n                label: type,\r\n                value: workload[type],\r\n                color: (type === 'Delayed') ? 'tomato' : 'lightgreen'\r\n            });\r\n        })\r\n\r\n        return dueDatesStatsData;\r\n    }\r\n\r\n    getBoardStats = (board) => {\r\n\r\n        if (!board.stacks) return null;\r\n\r\n        let stats;\r\n\r\n        let byLabels = this.getStatsByLabels(board);\r\n        let byUsers = this.getStatsByUsers(board);\r\n        let byDueDate = this.getStatsByDueDates(board);\r\n        let totalTimeEstimation = this.getTotalTimeEstimation(board);\r\n\r\n        if (byDueDate === null) this.setState({ isNoCardsBoard: true })\r\n        else {\r\n            if (this.state.isNoCardsBoard) this.setState({ isNoCardsBoard: false })\r\n        }\r\n        stats = { byLabels, byUsers: byUsers.userStatsData, byDueDate, maxTasks: byUsers.maxTasks, totalTimeEstimation };\r\n\r\n        console.log(stats);\r\n        return stats;\r\n    }\r\n\r\n    getTotalTimeEstimation = (board) => {\r\n\r\n        let timeEstimation = { days: 0, hours: 0, minutes: 0 };\r\n\r\n        board.stacks.forEach(stack => {\r\n\r\n            stack.cards.forEach(card => {\r\n                const estimate = card.timeEstimation;\r\n \r\n                if(estimate !== '') {\r\n                    timeEstimation.days += +estimate.days;\r\n                    timeEstimation.hours += +estimate.hours;\r\n                    timeEstimation.minutes += +estimate.minutes;\r\n                }\r\n            })\r\n        })\r\n\r\n        if(!(timeEstimation.days + timeEstimation.hours + timeEstimation.minutes)) {\r\n            return null;\r\n        }\r\n        let daysLabel = (!timeEstimation.days) ? '' : (timeEstimation.days > 1) ? timeEstimation.days + ' days,' : timeEstimation.days + ' day,';\r\n        let hoursLabel = (!timeEstimation.hours) ? '' : (timeEstimation.hours > 1) ? timeEstimation.hours + ' hours,' : timeEstimation.hours + ' hour,';\r\n        let minutesLabel = (!timeEstimation.minutes) ? '' : timeEstimation.minutes + ' min';\r\n\r\n        return daysLabel + ' ' + hoursLabel + ' ' + minutesLabel;\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const { board, cardCount, boardStats } = this.state;\r\n        const { isShowingStatistics, toggleShowStatistics } = this.props;\r\n\r\n        return ((!board) ? '' :\r\n\r\n            <>\r\n                <div className=\"stats flex align-center justify-center\">\r\n\r\n                    <section className={`board-statistics modal-container flex column ${(isShowingStatistics) ? '' : 'board-statistics-closed'}`} onMouseDown={(ev) => ev.stopPropagation()}\r\n                        ref={this.elStats}>\r\n                        <header className=\"board-statistics-header-span flex align-baseline justify-center\">\r\n                            <div className=\"board-statistics-header-text flex align-baseline justify-center\">\r\n                                <p className=\"board-statistics-header\">{board.title}</p>\r\n                                <p className=\"secondary\">statistics</p>\r\n                            </div>\r\n                            <img className=\"stats-back-btn\" src=\"/assets/img/back.png\" alt=\"\" onClick={toggleShowStatistics} />\r\n                        </header>\r\n                        <small className=\"board-statistics-info flex align-center space-evenly wrap\">\r\n                            \r\n                            {/* {(board.createdBy) ?\r\n                                // <StatisticsInfoBlock info={moment(board.createdAt).format('MMM Do YYYY') + ` [${board.createdBy.username}]`} type='createdBy' />\r\n                                <StatisticsInfoBlock info={moment(board.createdAt).format('MMM Do YYYY')} type='createdBy' />\r\n                                : null\r\n                            } */}\r\n                            {(boardStats && boardStats.totalTimeEstimation) ?\r\n                                // <StatisticsInfoBlock info={moment(board.createdAt).format('MMM Do YYYY') + ` [${board.createdBy.username}]`} type='createdBy' />\r\n                                <StatisticsInfoBlock info={boardStats.totalTimeEstimation} type='timeEstimation' />\r\n                                : null\r\n                            }\r\n                            {(board.members) ?\r\n                                <StatisticsInfoBlock info={board.members.length} type='members' />\r\n                                : null\r\n                            }\r\n                            {(board.stacks) ?\r\n                                <StatisticsInfoBlock info={board.stacks.length} type='stacks' />\r\n                                : null\r\n                            }\r\n                            {(board.stacks && cardCount) ?\r\n                                <StatisticsInfoBlock info={cardCount} type='cards' />\r\n                                : null\r\n                            }\r\n                            {(board.activities) ?\r\n                                <StatisticsInfoBlock info={board.activities.length} type='activities' />\r\n                                : null\r\n                            }\r\n\r\n\r\n                        </small>\r\n                        {(boardStats) ?\r\n                            <section className=\"board-statistics-content grid\">\r\n\r\n                                {(boardStats.byUsers) ?\r\n                                    < div className=\"stat-item by-users flex column justify-center align-center\">\r\n                                        <p className=\"board-stats-title\">Weekly Members Workload</p>\r\n                                        <StatisticsBar data={boardStats.byUsers} maxTasks={boardStats.maxTasks} />\r\n\r\n                                    </div>\r\n                                    : null\r\n                                }\r\n                                {(boardStats.byLabels) ?\r\n                                    < div className=\"stat-item by-labels flex column justify-center align-center\">\r\n                                        <p className=\"board-stats-title\">Most Popular Labels</p>\r\n                                        <StatisticsPie data={boardStats.byLabels} type=\"labels\" />\r\n\r\n                                    </div>\r\n                                    : null\r\n                                }\r\n                                {(boardStats.byDueDate) ?\r\n                                    < div className=\"stat-item by-due-date flex column justify-center align-center\">\r\n                                        <p className=\"board-stats-title\">On-Time/Delayed Work</p>\r\n                                        <StatisticsPie data={boardStats.byDueDate} type=\"dueDate\" />\r\n\r\n                                    </div>\r\n                                    : null\r\n                                }\r\n\r\n                            </section>\r\n                            : null\r\n\r\n                        }\r\n\r\n                    </section>\r\n\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = {\r\n    save,\r\n    loadBoard\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currBoard: state.board.currBoard,\r\n        loggedInUser: state.user.loggedInUser\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BoardStatistics);","\r\n// a little function to help us with reordering the result\r\n\r\nexport function reorder (list, startIndex, endIndex) {\r\n    const result = Array.from(list);\r\n    const [removed] = result.splice(startIndex, 1);\r\n    result.splice(endIndex, 0, removed);\r\n    return result;\r\n};\r\n\r\n// a little function to help us with moving an item between droppables\r\n\r\nexport function move (source, destination, droppableSource, droppableDestination) {\r\n    const sourceClone = Array.from(source);\r\n    const destClone = Array.from(destination);\r\n    const [removed] = sourceClone.splice(droppableSource.index, 1);\r\n    destClone.splice(droppableDestination.index, 0, removed);\r\n\r\n    const result = {};\r\n    result[droppableSource.droppableId] = sourceClone;\r\n    result[droppableDestination.droppableId] = destClone;\r\n    return result;\r\n};","import React from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport { loadBoard, save, setBoard, updateStackTitle } from '../store/actions/boardActions';\r\nimport AddContent from '../cmps/AddContent';\r\nimport { Route, Link } from 'react-router-dom';\r\nimport { CardPreview } from '../cmps/CardPreview.jsx';\r\nimport { Stack } from '../cmps/Stack.jsx';\r\nimport CardDetails from '../pages/CardDetails.jsx';\r\nimport BoardOptions from '../cmps/BoardOptions'\r\nimport socketService from '../services/socketService'\r\nimport BoardStatistics from '../pages/BoardStatistics'\r\nimport { makeId } from '../services/utilService';\r\nimport { reorder, move } from '../services/boardDetailsUtils';\r\nimport ActionContainer from '../cmps/ActionContainer';\r\n// import ScrollContainer from 'react-indiana-drag-scroll'\r\n\r\nclass BoardDetails extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.stackTitleFocus = [];\r\n    }\r\n\r\n    state = {\r\n        areLabelsOpen: false,\r\n        isShowingStatistics: false,\r\n        stackTitles: {},\r\n        stackMenus: {}\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (!this.props.loggedInUser) return this.props.history.push('/boards')\r\n        const { boardId } = this.props.match.params;\r\n\r\n        socketService.setup();\r\n        socketService.emit('setBoard', boardId);\r\n        socketService.on('loadBoard', this.setBoard)\r\n\r\n        this.props.loadBoard(boardId);\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        const { stackTitles } = this.state;\r\n\r\n        if (prevProps.currBoard !== this.props.currBoard) {\r\n            // this.setState({ currBoard: this.props.currBoard });\r\n            document.body.style.backgroundImage = `url(/${this.props.currBoard.bg})`;\r\n            document.body.style.backgroundColor = this.props.currBoard.bg;\r\n        }\r\n\r\n        if (this.props.currBoard && this.props.currBoard.stacks.length &&\r\n            !Object.keys(stackTitles).length && stackTitles.constructor === Object) {\r\n            this.populateStacksInfo(this.props.currBoard);\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        if (!this.props.loggedInUser) return;\r\n        document.body.style = '';\r\n        socketService.off('loadBoard', this.setBoard);\r\n        socketService.terminate();\r\n    }\r\n\r\n    populateStacksInfo = (board) => {\r\n        let stackTitles = {};\r\n        let stackMenus = {};\r\n        board.stacks.forEach((stack) => {\r\n            stackTitles[stack.id] = stack.title;\r\n            stackMenus[stack.id] = false;\r\n        });\r\n        this.setState({ stackTitles, stackMenus });\r\n    }\r\n\r\n    setBoard = (currBoard) => this.props.setBoard(currBoard)\r\n\r\n    onToggleLabels = () => {\r\n\r\n        this.setState(({ areLabelsOpen }) => ({ areLabelsOpen: !areLabelsOpen }));\r\n    }\r\n\r\n    onEditStackTitle = ({ target }) => {\r\n        let currBoard = { ...this.props.currBoard };\r\n        this.setState({ stackTitles: { [currBoard.stacks[target.dataset.idx].id]: target.value } });\r\n    }\r\n\r\n    onNewStackTitle = ({ target }) => {\r\n        let currBoard = { ...this.props.currBoard };\r\n        const { stackTitles } = this.state;\r\n\r\n        currBoard.stacks[target.dataset.idx].title = stackTitles[currBoard.stacks[target.dataset.idx].id];\r\n        this.props.save(currBoard);\r\n    }\r\n\r\n    getItemStyle = (isDragging, draggableStyle) => {\r\n\r\n        return ({\r\n            // some basic styles to make the items look a bit nicer\r\n            ...draggableStyle,\r\n            // change background colour if dragging\r\n            background: isDragging ? 'rgb(219, 219, 219)' : '#ebecf0'\r\n        });\r\n    }\r\n\r\n    onStackRemove = (stackId) => {\r\n\r\n        // console.log(stackId);\r\n        let currBoard = { ...this.props.currBoard };\r\n        if (currBoard.isPublic) return;\r\n        let stackIdx = currBoard.stacks.findIndex(stack => {\r\n            return stack.id === stackId;\r\n        })\r\n\r\n        currBoard.stacks.splice(stackIdx, 1);\r\n        this.props.save(currBoard);\r\n    }\r\n\r\n    onStackAdd = (newStackTitle) => {\r\n\r\n        let currBoard = { ...this.props.currBoard };\r\n        let id = makeId();\r\n\r\n        currBoard.stacks.push({\r\n            bgColor: \"#fefefe\",\r\n            cards: [],\r\n            id,\r\n            title: newStackTitle,\r\n        });\r\n\r\n        let stackTitles = { ...this.state.stackTitles };\r\n        let stackMenus = { ...this.state.stackMenus };\r\n\r\n        stackTitles[id] = newStackTitle;\r\n        stackMenus[id] = false;\r\n        this.setState({ stackTitles, stackMenus })\r\n        this.props.save(currBoard);\r\n    }\r\n\r\n    onCardAdd = (newCardTitle, stackId) => {\r\n\r\n        let currBoard = { ...this.props.currBoard };\r\n        let stackIdx = currBoard.stacks.findIndex((stack) => {\r\n            return stackId === stack.id;\r\n        });\r\n        currBoard.stacks[stackIdx].cards.push({\r\n            id: makeId(),\r\n            title: newCardTitle,\r\n            description: \"\",\r\n            comments: [],\r\n            checklists: [],\r\n            members: [],\r\n            labels: [],\r\n            activities: [],\r\n            byMember: this.props.loggedInUser,\r\n            createdAt: Date.now(),\r\n            dueDate: '',\r\n            bgColor: 'white',\r\n            timeEstimation: ''\r\n        });\r\n\r\n        this.props.save(this.props.currBoard);\r\n    }\r\n\r\n    onDragEnd = (result) => {\r\n\r\n        const { loggedInUser, currBoard } = this.props\r\n        const { source, destination } = result;\r\n\r\n        // Dropped outside the list\r\n        if (!destination) {\r\n            return;\r\n        }\r\n\r\n        let stacks = [...currBoard.stacks];\r\n        const newState = { ...currBoard };\r\n\r\n        // Changed Stacks order\r\n        if ((source.droppableId === destination.droppableId) && source.droppableId === 'board') {\r\n            const items = reorder(stacks, source.index, destination.index);\r\n            newState.stacks = items;\r\n\r\n            const stackSourceTitle = currBoard.stacks[source.index].title;\r\n            const stackPlace = destination.index + 1\r\n            currBoard.activities.unshift({ id: makeId(), txt: `moved stack ${stackSourceTitle} to place number ${stackPlace}`, createdAt: Date.now(), byMember: loggedInUser })\r\n\r\n\r\n            // Changed Cards order\r\n        } else {\r\n            const sIndex = +source.droppableId;\r\n            const dIndex = +destination.droppableId;\r\n\r\n            // Changed Card index in current Stack\r\n            if (sIndex === dIndex) {\r\n                const items = reorder(stacks[sIndex].cards, source.index, destination.index);\r\n                newState.stacks[sIndex].cards = items;\r\n\r\n                // Changed Card between Stacks\r\n            } else {\r\n                const sourceTitle = currBoard.stacks[+source.droppableId].title\r\n                const destTitle = currBoard.stacks[+destination.droppableId].title\r\n                const cardMovedTitle = currBoard.stacks[+source.droppableId].cards[source.index].title\r\n                currBoard.activities.unshift({ id: makeId(), txt: `moved card ${cardMovedTitle} from ${sourceTitle} to ${destTitle}`, createdAt: Date.now(), byMember: loggedInUser })\r\n\r\n                const result = move(stacks[sIndex].cards, stacks[dIndex].cards, source, destination);\r\n                newState.stacks[sIndex].cards = result[sIndex];\r\n                newState.stacks[dIndex].cards = result[dIndex];\r\n            }\r\n        }\r\n        this.props.save(newState)\r\n    }\r\n\r\n    onStackTitleFocus = (index) => this.stackTitleFocus[index].focus();\r\n\r\n    onToggleAction = (action) => {\r\n\r\n        let actions = this.state.stackMenus;\r\n        for (const key in actions) {\r\n            if (key !== action) {\r\n                actions[key] = false;\r\n            }\r\n        }\r\n        actions[action] = !actions[action];\r\n        this.setState({ isShown: actions });\r\n    }\r\n\r\n    onSetBg = (bg, type) => {\r\n        if (type === 'img') {\r\n            const bgUrl = bg.slice(1, bg.length + 1)\r\n            document.body.style.backgroundImage = `url(/${bgUrl})`\r\n            document.body.style.backgroundColor = ''\r\n            this.props.currBoard.bg = bgUrl\r\n        } else {\r\n            document.body.style.backgroundImage = ''\r\n            document.body.style.backgroundColor = bg\r\n            this.props.currBoard.bg = bg\r\n        }\r\n        const { loggedInUser } = this.props\r\n        // @TODO: ACTIONS - ADD ACTIVITY!\r\n        this.props.currBoard.activities.unshift({ id: makeId(), txt: `has changed the board background`, createdAt: Date.now(), byMember: loggedInUser })\r\n        this.props.save(this.props.currBoard)\r\n    }\r\n\r\n    toggleShowStatistics = () => {\r\n        this.setState(prevState => ({ isShowingStatistics: !prevState.isShowingStatistics }));\r\n    }\r\n\r\n    render() {\r\n        const { history, currBoard } = this.props;\r\n        const { areLabelsOpen, stackTitles, isShowingStatistics, isShown } = this.state;\r\n\r\n        if (!currBoard) return 'Loading...'\r\n        // console.log(currBoard);\r\n        return (\r\n            <>\r\n                {/* Board Options bar */}\r\n                <BoardOptions isShowingStatistics={isShowingStatistics} history={history} board={currBoard} onSetBg={this.onSetBg} toggleShowStatistics={this.toggleShowStatistics} />\r\n                {/* Route to Card details */}\r\n                <Route component={CardDetails} path=\"/boards/:boardId/card/:cardId\" />\r\n\r\n                {/* Board content: showing stacks OR statistics */}\r\n                <section className=\"board-content flex column align-start space-between\">\r\n\r\n                    {(isShowingStatistics)\r\n                        ?\r\n                        <BoardStatistics isShowingStatistics={isShowingStatistics} toggleShowStatistics={this.toggleShowStatistics} />\r\n                        : (currBoard && stackTitles)\r\n                            ?\r\n                            // this.stacks(areLabelsOpen, stackTitles) \r\n                            <span className=\"stacks-section flex\">\r\n                                <DragDropContext\r\n                                    onDragEnd={this.onDragEnd}\r\n                                >\r\n                                    <Droppable droppableId=\"board\" isCombineEnabled={false} type=\"STACK\" direction='horizontal'>\r\n                                        {(provided, snapshot) => (\r\n                                            <div\r\n                                                ref={provided.innerRef}\r\n                                                {...provided.droppableProps}\r\n                                                className=\"stacks-content flex\"\r\n                                            >\r\n\r\n                                                {(currBoard.stacks.length) ? currBoard.stacks.map((stack, index) => (\r\n                                                    <Draggable key={stack.id}\r\n                                                        draggableId={stack.id} index={index} type=\"STACK\" >\r\n\r\n                                                        {(provided, snapshot) => {\r\n                                                            return (\r\n                                                                <div\r\n                                                                    ref={provided.innerRef}\r\n                                                                    {...provided.draggableProps}\r\n                                                                    style={{\r\n                                                                        ...this.getItemStyle(\r\n                                                                            snapshot.isDragging,\r\n                                                                            provided.draggableProps.style,\r\n                                                                        ),\r\n                                                                        width: 250,\r\n\r\n                                                                    }}\r\n                                                                    className=\"stack-content flex column\"\r\n                                                                >\r\n                                                                    <div className=\"stack-header flex space-between\" {...provided.dragHandleProps}>\r\n                                                                        <input autoComplete=\"off\" type=\"text\" name=\"title\" className=\"stack-title-input\" data-idx={index} onChange={this.onEditStackTitle}\r\n                                                                            value={stackTitles[stack.id]} onClick={() => this.onStackTitleFocus(index)} ref={input => this.stackTitleFocus[index] = input}\r\n                                                                            onBlur={this.onNewStackTitle} />\r\n                                                                        <Link title=\"Options\" to=\"#\" onClick={() => this.onToggleAction(stack.id)}><button className=\"stack-header-menu\">. . .</button></Link>\r\n                                                                        {(isShown && isShown[stack.id]) && <ActionContainer onStackRemove={this.onStackRemove} stackInfo={{ id: stack.id, title: stack.title }} isShown={{ stack: true }}\r\n                                                                            onToggleAction={this.onToggleAction} />}\r\n                                                                    </div>\r\n\r\n                                                                    {/* <p className=\"stack-title flex align-center\"  ></p> */}\r\n\r\n                                                                    <Droppable key={index}\r\n                                                                        droppableId={`${index}`} isCombineEnabled={false}\r\n                                                                        type=\"CARD\">\r\n                                                                        {(provided, snapshot) => (\r\n                                                                            <Stack\r\n                                                                                innerRef={provided.innerRef}\r\n                                                                                provided={provided}\r\n                                                                            >\r\n\r\n                                                                                {stack.cards.map((card, index) => (\r\n                                                                                    <Draggable\r\n                                                                                        key={card.id}\r\n                                                                                        draggableId={card.id}\r\n                                                                                        index={index}\r\n                                                                                        type=\"CARD\"\r\n                                                                                    >\r\n                                                                                        {(provided, snapshot) => (\r\n\r\n                                                                                            <span>\r\n                                                                                                <CardPreview\r\n                                                                                                    title={card.title}\r\n                                                                                                    innerRef={provided.innerRef}\r\n                                                                                                    provided={provided}\r\n                                                                                                    card={card}\r\n                                                                                                    labelsOpen={areLabelsOpen}\r\n                                                                                                    onToggleLabels={this.onToggleLabels}\r\n                                                                                                    link={`/boards/${currBoard._id}/card/${card.id}`}\r\n                                                                                                    style={{\r\n                                                                                                        ...this.getItemStyle(\r\n                                                                                                            snapshot.isDragging,\r\n                                                                                                            provided.draggableProps.style,\r\n                                                                                                        ),\r\n                                                                                                        background: card.bgColor,\r\n\r\n                                                                                                    }}\r\n                                                                                                    history={this.props.history}\r\n                                                                                                >\r\n                                                                                                </CardPreview>\r\n                                                                                            </span>\r\n\r\n                                                                                        )}\r\n                                                                                    </Draggable>\r\n                                                                                ))}\r\n                                                                                {provided.placeholder}\r\n                                                                            </Stack>\r\n                                                                        )}\r\n                                                                    </Droppable>\r\n                                                                    <AddContent type=\"card\" onCardAdd={this.onCardAdd} itemId={stack.id} />\r\n                                                                </div>\r\n                                                            )\r\n                                                        }}\r\n                                                    </Draggable>\r\n                                                )) : null}\r\n                                                {provided.placeholder}\r\n                                            </div>\r\n                                        )}\r\n                                    </Droppable>\r\n                                    <div className=\"add-stack-container\">\r\n                                        <AddContent type=\"stack\" onStackAdd={this.onStackAdd} />\r\n                                    </div>\r\n                                </DragDropContext>\r\n                            </span>\r\n                            : null\r\n                    }\r\n\r\n                </section>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        currBoard: state.board.currBoard,\r\n        loggedInUser: state.user.loggedInUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadBoard,\r\n    save,\r\n    setBoard,\r\n    updateStackTitle\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BoardDetails)\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { update, login } from '../store/actions/userActions';\r\nimport { uploadImg } from '../services/cloudinaryService'\r\n\r\nclass UserProfile extends Component {\r\n\r\n    state = {\r\n        user: null,\r\n        msg: '',\r\n        isUploadImg: false,\r\n        isFinishUpload: false,\r\n        isErrorMsg: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { loggedInUser, history } = this.props\r\n        if (!loggedInUser) history.push('/login')\r\n        this.setState({ user: loggedInUser })\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearTimeout(this.timeoutFinishUpload)\r\n    }\r\n\r\n    onUploadImg = async ev => {\r\n        this.setState({ isUploadImg: true })\r\n        const imgUrl = await uploadImg(ev)\r\n        this.setState({ isUploadImg: false, isFinishUpload: true })\r\n        this.timeoutFinishUpload = setTimeout(() => {\r\n            this.setState({ isFinishUpload: false })\r\n        }, 2500);\r\n        this.setState(prevState => ({ user: { ...prevState.user, imgUrl } }))\r\n    }\r\n\r\n    handleChange = ({ target }) => {\r\n        const field = target.name\r\n        const value = target.value\r\n\r\n        this.setState(prevState => ({ user: { ...prevState.user, [field]: value } }))\r\n    }\r\n\r\n    onUpdateUser = async ev => {\r\n        ev.preventDefault();\r\n        const { username, password, fullname, imgUrl, confirmPassword } = this.state.user\r\n\r\n        if (!username || !password || !fullname) return this.setState({ msg: 'Please enter username, password and full name', isErrorMsg: true });\r\n        if (!password && !confirmPassword) return this.setState({ msg: 'Please enter username and password', isErrorMsg: true })\r\n        if (password !== confirmPassword) return this.setState({ msg: 'Passwords don\\'t match!', isErrorMsg: true })\r\n\r\n        const user = { _id: this.props.loggedInUser._id, username, password, fullname, imgUrl }\r\n        try {\r\n            await this.props.update(user)\r\n            user._id = this.props.loggedInUser._id\r\n            await this.props.login(user)\r\n        } catch (err) {\r\n            return this.setState({ isErrorMsg: true, msg: err })\r\n        }\r\n\r\n        return this.setState({ isErrorMsg: false, msg: 'User Updated Successfully' }, () => {\r\n            setTimeout(() => {\r\n                this.props.history.go(0)\r\n                this.setState({ msg: '' })\r\n            }, 2000);\r\n        })\r\n    }\r\n\r\n    onOpenUpload = () => {\r\n        this.inputElement.click();\r\n    }\r\n\r\n    render() {\r\n        const { user, msg, isErrorMsg, isUploadImg } = this.state\r\n\r\n        const msgStyle = (isErrorMsg) ? { backgroundColor: '#dd1739' } : { backgroundColor: '#17d965' }\r\n\r\n        if (!user) return 'Loading...'\r\n        return (\r\n            <div className=\"container flex justify-center\">\r\n                <div className=\"form-container\">\r\n                    <div className=\"user-profile-container flex align-start\">\r\n                        <div className=\"user-content\">\r\n                            <h2 className=\"user-profile-title flex align-center\">\r\n                                <img src=\"assets/img/user-icon.png\" className=\"user-icon\" alt=\"\" /> {this.props.loggedInUser.fullname}\r\n                            </h2>\r\n                            <form onSubmit={this.onUpdateUser} className=\"user-profile-form flex column align-start\">\r\n                                <input type=\"text\" placeholder=\"User name\" autoComplete=\"off\" onChange={this.handleChange} className=\"profile-input input\" name=\"username\" value={user.username} />\r\n                                <input type=\"text\" placeholder=\"Full name\" autoComplete=\"off\" onChange={this.handleChange} className=\"profile-input input\" name=\"fullname\" value={user.fullname} />\r\n                                <input type=\"password\" placeholder=\"Password\" autoComplete=\"off\" onChange={this.handleChange} className=\"profile-input input\" name=\"password\" />\r\n                                <input type=\"password\" placeholder=\"Confirm Password\" autoComplete=\"off\" onChange={this.handleChange} className=\"profile-input input\" name=\"confirmPassword\" />\r\n                                <input type=\"file\" name=\"imgUrl\" ref={input => this.inputElement = input} onChange={this.onUploadImg} hidden />\r\n                                <div className=\"img-submit-container flex space-between align-start\">\r\n                                    <span className=\"upload-img\" onClick={() => this.onOpenUpload()}>Upload Profile Image</span>\r\n                                    <button className={`btn btn-success ${isUploadImg ? 'disable' : ''}`} disabled={isUploadImg}>Save Changes</button>\r\n                                </div>\r\n\r\n                            </form>\r\n                            {msg && <div style={msgStyle} className=\"user-msg flex align-center space-between\">{msg}<img src=\"assets/img/error-white.png\" className=\"small-icon\" alt=\"\" /></div>}\r\n                        </div>\r\n                        <div className=\"user-img\">\r\n                            <img src={user.imgUrl} alt=\"\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedInUser: state.user.loggedInUser\r\n    };\r\n};\r\nconst mapDispatchToProps = {\r\n    update,\r\n    login\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserProfile);","import React, { Component } from 'react'\r\nimport { Link, NavLink } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { logout, signup } from '../store/actions/userActions';\r\nimport { getRandomColor, makeId } from '../services/utilService'\r\n\r\n\r\nclass NavBar extends Component {\r\n\r\n    state = {\r\n        isScroll: false,\r\n        isMenuOpen: false\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.scrollEvent()\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.document.removeEventListener('scroll', this.handleScroll)\r\n    }\r\n\r\n    scrollEvent() {\r\n        window.document.addEventListener('scroll', this.handleScroll)\r\n    }\r\n\r\n    get isHomepage() {\r\n        return this.props.location.pathname === '/'\r\n    }\r\n\r\n    handleScroll = () => {\r\n        let body = document.body\r\n        let theDocument;\r\n        theDocument = document.documentElement\r\n        theDocument = (theDocument.clientHeight) ? theDocument : body;\r\n\r\n        if (theDocument.scrollTop === 0) this.setState({ isScroll: false })\r\n        else this.setState({ isScroll: true })\r\n    }\r\n\r\n    onLogout = async () => {\r\n        this.toggleMenu()\r\n        await this.props.logout()\r\n\r\n        const userCred = {\r\n            username: `Guest-${makeId(4)}`,\r\n            password: '123456',\r\n            fullname: `Guesty McGuest-${makeId(4)}`,\r\n            imgUrl: 'https://res.cloudinary.com/shaishar9/image/upload/v1590398852/tgfntq8ghkaxjpo9seqa.jpg',\r\n            isGuest: true,\r\n            bgColor: getRandomColor()\r\n        }\r\n        this.props.signup(userCred)\r\n    }\r\n\r\n    toggleMenu = () => {\r\n        this.setState(prevState => ({ isMenuOpen: !prevState.isMenuOpen }))\r\n    }\r\n\r\n    render() {\r\n        const user = this.props.loggedInUser\r\n        const { isMenuOpen, isScroll } = this.state\r\n\r\n        return (\r\n            <>\r\n                {isMenuOpen && <div className=\"screen main-nav-screen\" onClick={this.toggleMenu}></div>}\r\n                <div className={`nav-container ${(isScroll || !this.isHomepage) ? 'scrolled' : ''} ${(isMenuOpen) ? 'menu-open' : ''}`} style={(this.isHomepage) ? { marginTop: '10px' } : {}}>\r\n                    <div className={`${(this.isHomepage) ? 'container' : ''}`}>\r\n                        <div className=\"nav-content flex space-between align-center\">\r\n                            <Link to=\"/\"><img src=\"/assets/img/logomain-white.png\" className=\"logo-img\" alt=\"\"/></Link>\r\n                            {/* <Link to=\"/\"><h1 className=\"logo\"><span className=\"logo-we\">we</span>task</h1></Link> */}\r\n                            <ul className=\"main-nav clean-list flex\">\r\n                                <li className=\"quit-menu\"><button onClick={() => this.toggleMenu()}></button></li>\r\n                                <li><NavLink onClick={this.toggleMenu} exact to=\"/\">Home</NavLink></li>\r\n                                {user && <li><NavLink onClick={this.toggleMenu} to=\"/boards\">Boards</NavLink></li>}\r\n                                {user && <li><NavLink onClick={this.toggleMenu} to=\"/profile\">Profile</NavLink></li>}\r\n                                {user?.isGuest && <li><NavLink onClick={this.toggleMenu} to=\"/signup\">Signup</NavLink></li>}\r\n                                {user?.isGuest && <li><NavLink onClick={this.toggleMenu} to=\"/login\">Login</NavLink></li>}\r\n                                {!user?.isGuest && <li><Link to=\"/\" onClick={this.onLogout}>Logout</Link></li>}\r\n                            </ul>\r\n                            <button onClick={this.toggleMenu} className=\"btn-menu\"></button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedInUser: state.user.loggedInUser\r\n    };\r\n};\r\nconst mapDispatchToProps = {\r\n    logout,\r\n    signup\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NavBar);","import React, { Component } from 'react'\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport './style/global.scss';\r\nimport HomePage from './pages/HomePage'\r\nimport LoginSignup from './pages/LoginSignup'\r\nimport Boards from './pages/Boards'\r\nimport BoardDetails from './pages/BoardDetails'\r\nimport UserProfile from './pages/UserProfile'\r\nimport NavBar from './cmps/NavBar'\r\nimport { signup } from './store/actions/userActions';\r\nimport { connect } from 'react-redux'\r\nimport { makeId, getRandomColor } from './services/utilService'\r\n\r\n\r\nclass App extends Component {\r\n\r\n  componentDidMount() {\r\n    if (this.props.loggedInUser) return;\r\n    this.guestSignup()\r\n  }\r\n\r\n  guestSignup() {\r\n    const userCred = {\r\n      username: `Guest-${makeId(4)}`,\r\n      password: '123456',\r\n      fullname: `Guesty McGuest-${makeId(4)}`,\r\n      imgUrl: 'https://res.cloudinary.com/shaishar9/image/upload/v1590398852/tgfntq8ghkaxjpo9seqa.jpg',\r\n      isGuest: true,\r\n      bgColor: getRandomColor()\r\n    }\r\n    this.props.signup(userCred)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        <Route component={NavBar} path=\"/\" />\r\n        <main className=\"main-content top-p\">\r\n          <Switch>\r\n            <Route component={UserProfile} path=\"/user/:userId\" />\r\n            <Route component={BoardDetails} path=\"/boards/:boardId\" />\r\n            <Route component={Boards} path=\"/boards\" />\r\n            <Route component={UserProfile} path=\"/profile\" />\r\n            <Route component={LoginSignup} path=\"/login\" />\r\n            <Route component={LoginSignup} path=\"/signup\" />\r\n            <Route component={HomePage} path=\"/\" />\r\n          </Switch>\r\n        </main>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    loggedInUser: state.user.loggedInUser\r\n  };\r\n};\r\nconst mapDispatchToProps = {\r\n  signup\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","let localLoggedinUser = null;\r\nif (sessionStorage.user) localLoggedinUser = JSON.parse(sessionStorage.user);\r\n\r\nconst initialState = {\r\n    loggedInUser: localLoggedinUser,\r\n    users: []\r\n};\r\n\r\nexport default function (state = initialState, action = {}) {\r\n    switch (action.type) {\r\n        case 'SET_USER':\r\n            return {\r\n                ...state,\r\n                loggedInUser: action.user\r\n            }\r\n        case 'LOAD_USERS':\r\n            return {\r\n                ...state,\r\n                users: action.users\r\n            }\r\n        case 'UPDATE_USER':\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if (user._id === action.user._id) return action.user;\r\n                    return user;\r\n                })\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","const initialState = {\r\n    boards: [],\r\n    currBoard: null\r\n}\r\n\r\nexport default function boardReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_BOARDS':\r\n            return {\r\n                ...state,\r\n                boards: action.boards\r\n            }\r\n        case 'SET_BOARD':\r\n            return {\r\n                ...state,\r\n                currBoard: action.board\r\n            }\r\n        case 'UPDATE_STACK_TITLE':\r\n\r\n            return {\r\n                ...state,\r\n                currBoard: {\r\n                    ...state.currBoard,\r\n                    stacks: state.currBoard.stacks.map(stack => {\r\n                        if (stack.id === action.stack.id) stack.title = action.stack.title\r\n                        return stack\r\n                    })\r\n                }\r\n            }\r\n        case 'SET_CARD':\r\n            return {\r\n                ...state,\r\n                currBoard: {\r\n                    ...state.currBoard, stacks: state.currBoard.stacks.map(stack => {\r\n                        stack.cards = stack.cards.map(card => {\r\n                            if (card.id === action.card.id) return action.card;\r\n                            return card;\r\n                        })\r\n                        return stack\r\n                    })\r\n                }\r\n            }\r\n        case 'ADD_BOARD':\r\n            return {\r\n                ...state,\r\n                boards: [action.board, ...state.boards]\r\n            }\r\n        case 'UPDATE_BOARD':\r\n            return {\r\n                ...state,\r\n                boards: state.boards.map(board => {\r\n                    if (board._id === action.board._id) return action.board;\r\n                    return board;\r\n                })\r\n            }\r\n        case 'REMOVE_BOARD':\r\n            return {\r\n                ...state,\r\n                boards: state.boards.filter(board => board._id !== action.boardId)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","\r\nimport { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport userReducer from './reducers/userReducer.js';\r\nimport boardReducer from './reducers/boardReducers.js';\r\n\r\nconst rootReducer = combineReducers({\r\n    user: userReducer,\r\n    board: boardReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(rootReducer,\r\n    composeEnhancers(applyMiddleware(thunk))\r\n)","import { createBrowserHistory } from \"history\";\r\nconst history = createBrowserHistory();\r\n\r\nexport default history;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { store } from './store/store.js';\r\nimport { Provider } from 'react-redux'\r\nimport { Router } from \"react-router-dom\";\r\nimport history from './history'\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <Router history={history}>\r\n      <App />\r\n    </Router>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}